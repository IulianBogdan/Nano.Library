<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nano.Security</name>
    </assembly>
    <members>
        <member name="T:Nano.Security.BaseIdentityManager`1">
            <summary>
            Base Identity Manager.
            </summary>
        </member>
        <member name="P:Nano.Security.BaseIdentityManager`1.DbContext">
            <summary>
            Db Context.
            </summary>
        </member>
        <member name="P:Nano.Security.BaseIdentityManager`1.Options">
            <summary>
            Options.
            </summary>
        </member>
        <member name="P:Nano.Security.BaseIdentityManager`1.UserManager">
            <summary>
            User Manager.
            </summary>
        </member>
        <member name="P:Nano.Security.BaseIdentityManager`1.RoleManager">
            <summary>
            Role Manager.
            </summary>
        </member>
        <member name="P:Nano.Security.BaseIdentityManager`1.SignInManager">
            <summary>
            Sign In Manager.
            </summary>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser{`0}},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole{`0}},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser{`0}},Nano.Security.SecurityOptions)">
            <summary>
            The user authenticates and on success recieves a jwt token for use with auhtorization.
            </summary>
            <param name="dbContext">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/>.</param>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/>.</param>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/>.</param>
            <param name="roleManager">The <see cref="T:Microsoft.AspNetCore.Identity.RoleManager`1"/></param>
            <param name="options">The <see cref="T:Nano.Security.SecurityOptions"/>.</param>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.GetJwtToken(Nano.Security.Models.AccessTokenData{`0},System.Threading.CancellationToken)">
            <summary>
            Gets an <see cref="T:Nano.Security.Models.AccessToken"/> using the passed <see cref="T:Nano.Security.Models.AccessTokenData`1"/>.
            </summary>
            <param name="accessTokenData">The <see cref="T:Nano.Security.Models.AccessTokenData`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.GetExternalProvidersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all the configured external logins schemes.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The collection of <see cref="T:Nano.Security.Models.LoginProvider"/>'s.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.GetExternalProviderInfoAsync(Nano.Security.Models.LoginExternalProvider,System.Threading.CancellationToken)">
            <summary>
            Gets the external provider info.
            </summary>
            <param name="loginExternal">The <see cref="T:Nano.Security.Models.LoginExternalProvider"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Nano.Security.Models.ExternalLoginData"/></returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.ValidateExternalProviderAccessToken(Nano.Security.Models.LoginExternalProvider,System.Threading.CancellationToken)">
            <summary>
            Validates the external provider access token.
            </summary>
            <param name="loginExternal">The <see cref="T:Nano.Security.Models.LoginExternalProvider"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Boolean, indicating if the external provider access token is still valid.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SignInAsync(Nano.Security.Models.Login,System.Threading.CancellationToken)">
            <summary>
            Signs in a user.
            </summary>
            <param name="login">The <see cref="T:Nano.Security.Models.Login"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Nano.Security.Models.AccessToken"/>.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SignInAdminAsync(Nano.Security.Models.Login,System.Threading.CancellationToken)">
            <summary>
            Signs in the admin user statically.
            The login is transient, no Identity backing store is used.
            </summary>
            <param name="login">The <see cref="T:Nano.Security.Models.Login"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Nano.Security.Models.AccessToken"/>.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SignInRefreshAsync(Nano.Security.Models.LoginRefresh,System.Threading.CancellationToken)">
            <summary>
            Refresh the login of a user.
            </summary>
            <param name="loginRefresh">The <see cref="T:Nano.Security.Models.LoginRefresh"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Nano.Security.Models.AccessToken"/>.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SignInExternalAsync(Nano.Security.Models.LoginExternal,System.Threading.CancellationToken)">
            <summary>
            Signs in a user, from external login.
            </summary>
            <param name="loginExternal">The <see cref="T:Nano.Security.Models.LoginExternal"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SignInExternalTransientAsync(Nano.Security.Models.LoginExternalTransient,System.Threading.CancellationToken)">
            <summary>
            Signs in a user, from external login.
            The login is transient, no Identity backing store is used.
            The login relies on the external login provider being valid.
            </summary>
            <param name="loginExternalTransient">The <see cref="T:Nano.Security.Models.LoginExternal"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SignInExternalChallangeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Configures the external authentication properties and returns a <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/>.
            </summary>
            <param name="loginProvider">The login provider.</param>
            <param name="redirectUrl">The redirect url.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/>.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SignInExternalChallangeCallbackAsync(System.Threading.CancellationToken)">
            <summary>
            Callback for signing in a user with external login info,
            from external login cookie data.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Nano.Security.Models.ExternalLoginData"/>.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SignOutAsync(System.Threading.CancellationToken)">
            <summary>
            Logs out a user.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SignUpAsync(Nano.Security.Models.SignUp,System.Threading.CancellationToken)">
            <summary>
            Registers a new user.
            </summary>
            <param name="signUp">The <see cref="T:Nano.Security.Models.SignUp"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/>.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SignUpExternalAsync(Nano.Security.Models.SignUpExternal,System.Threading.CancellationToken)">
            <summary>
            Registers a new user using an external login provider.
            </summary>
            <param name="signUpExternal">The <see cref="T:Nano.Security.Models.SignUpExternal"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/>.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.RemoveExternalLoginAsync(System.Threading.CancellationToken)">
            <summary>
            Removes the extenral login of a user.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SetUsernameAsync(Nano.Security.Models.SetUsername,System.Threading.CancellationToken)">
            <summary>
            Sets a username for a user.
            </summary>
            <param name="setUsername">The <see cref="T:Nano.Security.Models.SetUsername"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.SetPasswordAsync(Nano.Security.Models.SetPassword,System.Threading.CancellationToken)">
            <summary>
            Sets a password for a user.
            </summary>
            <param name="setPassword">The <see cref="T:Nano.Security.Models.SetPassword"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.ResetPasswordAsync(Nano.Security.Models.ResetPassword,System.Threading.CancellationToken)">
            <summary>
            Resets the password of a user.
            </summary>
            <param name="resetPassword">The <see cref="T:Nano.Security.Models.ResetPassword"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.ChangePasswordAsync(Nano.Security.Models.ChangePassword,System.Threading.CancellationToken)">
            <summary>
            Changes the password of a user.
            </summary>
            <param name="changePassword">The <see cref="T:Nano.Security.Models.ChangePassword"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.ChangeEmailAsync(Nano.Security.Models.ChangeEmail,System.Threading.CancellationToken)">
            <summary>
            Changes the email address of a user.
            </summary>
            <param name="changeEmail">The <see cref="T:Nano.Security.Models.ChangeEmail"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.ConfirmEmailAsync(Nano.Security.Models.ConfirmEmail,System.Threading.CancellationToken)">
            <summary>
            Confirms the email of a user.
            </summary>
            <param name="confirmEmail">The <see cref="T:Nano.Security.Models.ConfirmEmail"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.GenerateResetPasswordTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Generates an reset password token for a user.
            </summary>
            <param name="emailAddress">The email address.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Nano.Security.Models.ResetPasswordToken"/>.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.GenerateConfirmEmailTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Generates an email confirmation token for a user.
            </summary>
            <param name="emailAddress">The email address.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Nano.Security.Models.ConfirmEmailToken"/>.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.GenerateChangeEmailTokenAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Generates an change email token for a user.
            </summary>
            <param name="emailAddress">The email address.</param>
            <param name="newEmailAddress">The new email address.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Nano.Security.Models.ResetPasswordToken"/>.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.DeleteIdentityUser(Microsoft.AspNetCore.Identity.IdentityUser{`0})">
            <summary>
            Deletes the <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/>.
            </summary>
            <param name="identityUser">The <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/>.</param>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.CreateRole(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Identity.IdentityRole"/>.
            </summary>
            <param name="roleName">The role name.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.DeleteRole(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a <see cref="T:Microsoft.AspNetCore.Identity.IdentityRole"/>.
            </summary>
            <param name="roleName">The role name.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.AddRoleToUser(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a role to a user.
            </summary>
            <param name="userId"></param>
            <param name="roleName"></param>
            <param name="cancellationToken"></param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Security.BaseIdentityManager`1.RemoveRole(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a role from a user.
            </summary>
            <param name="userId"></param>
            <param name="roleName"></param>
            <param name="cancellationToken"></param>
            <returns>Void.</returns>
        </member>
        <member name="T:Nano.Security.Const.BuiltInUserRoles">
            <summary>
            Built-In User Roles.
            </summary>
        </member>
        <member name="F:Nano.Security.Const.BuiltInUserRoles.GUEST">
            <summary>
            Guest.
            </summary>
        </member>
        <member name="F:Nano.Security.Const.BuiltInUserRoles.READER">
            <summary>
            Reader.
            </summary>
        </member>
        <member name="F:Nano.Security.Const.BuiltInUserRoles.WRITER">
            <summary>
            Writer.
            </summary>
        </member>
        <member name="F:Nano.Security.Const.BuiltInUserRoles.SERVICE">
            <summary>
            Service.
            </summary>
        </member>
        <member name="F:Nano.Security.Const.BuiltInUserRoles.ADMINISTRATOR">
            <summary>
            Administrator.
            </summary>
        </member>
        <member name="T:Nano.Security.Const.ClaimTypesExtended">
            <summary>
            Claim Types Extended.
            </summary>
        </member>
        <member name="P:Nano.Security.Const.ClaimTypesExtended.AppId">
            <summary>
            App Id.
            </summary>
        </member>
        <member name="T:Nano.Security.DefaultIdentityManager">
            <inheritdoc />
        </member>
        <member name="M:Nano.Security.DefaultIdentityManager.#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}},Nano.Security.SecurityOptions)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Security.Exceptions.UnauthorizedEmailAddressNotFoundException">
            <summary>
            Unauthorized Unauthorized Email Address Not Found Exception.
            </summary>
        </member>
        <member name="T:Nano.Security.Exceptions.UnauthorizedException">
            <summary>
            Unauthorized Exception.
            </summary>
        </member>
        <member name="M:Nano.Security.Exceptions.UnauthorizedException.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Security.Exceptions.UnauthorizedException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Security.Exceptions.UnauthorizedLockedOutException">
            <summary>
            Unauthorized Locked Out Exception.
            </summary>
        </member>
        <member name="M:Nano.Security.Exceptions.UnauthorizedLockedOutException.#ctor">
            <inheritdoc />
        </member>
        <member name="T:Nano.Security.Exceptions.UnauthorizedSetPasswordException">
            <summary>
            Unauthorized Set Password Exception.
            </summary>
        </member>
        <member name="M:Nano.Security.Exceptions.UnauthorizedSetPasswordException.#ctor">
            <inheritdoc />
        </member>
        <member name="T:Nano.Security.Exceptions.UnauthorizedTwoFactorRequiredException">
            <summary>
            Unauthorized Two-Factor Required Exception.
            </summary>
        </member>
        <member name="M:Nano.Security.Exceptions.UnauthorizedTwoFactorRequiredException.#ctor">
            <inheritdoc />
        </member>
        <member name="T:Nano.Security.Extensions.HttpContextExtensions">
            <summary>
            Http Context Extensions.
            </summary>
        </member>
        <member name="M:Nano.Security.Extensions.HttpContextExtensions.GetIsAnonymous(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Get Is Anonymous.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>Whehter the current action is anonymous.</returns>
        </member>
        <member name="M:Nano.Security.Extensions.HttpContextExtensions.GetJwtAppId(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Get Jwt App Id.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>The app id.</returns>
        </member>
        <member name="M:Nano.Security.Extensions.HttpContextExtensions.GetJwtToken(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Get Jwt Token.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>The token.</returns>
        </member>
        <member name="M:Nano.Security.Extensions.HttpContextExtensions.GetJwtUserId(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Get Jwt User Id.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>The user id.</returns>
        </member>
        <member name="M:Nano.Security.Extensions.HttpContextExtensions.GetJwtUserName(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Get Jwt User Name.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>The user name.</returns>
        </member>
        <member name="M:Nano.Security.Extensions.HttpContextExtensions.GetJwtUserEmail(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Get Jwt User Email.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>The email.</returns>
        </member>
        <member name="T:Nano.Security.Extensions.ServiceCollectionExtensions">
            <summary>
            Service Collection Extensions.
            </summary>
        </member>
        <member name="M:Nano.Security.Extensions.ServiceCollectionExtensions.AddSecurity(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adds <see cref="T:Nano.Security.SecurityOptions"/> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>, and configures security.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</returns>
        </member>
        <member name="M:Nano.Security.Extensions.ServiceCollectionExtensions.AddIdentityManager``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the <see cref="T:Nano.Security.BaseIdentityManager`1"/> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <typeparam name="TIdentity">The identity type.</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</returns>
        </member>
        <member name="T:Nano.Security.Extensions.StringExtensions">
            <summary>
            String Extensions.
            </summary>
        </member>
        <member name="M:Nano.Security.Extensions.StringExtensions.GetRandomToken">
            <summary>
            Get Random Token.
            Generates and returns a random base64 token.
            </summary>
            <returns>A random base64 token.</returns>
        </member>
        <member name="T:Nano.Security.Models.AccessToken">
            <summary>
            Access Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessToken.AppId">
            <summary>
            App Id.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessToken.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessToken.ExpireAt">
            <summary>
            Expire At.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessToken.IsExpired">
            <summary>
            Is Expired.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessToken.RefreshToken">
            <summary>
            Refresh Token.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.AccessTokenData`1">
            <summary>
            Access Token Data.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessTokenData`1.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessTokenData`1.AppId">
            <summary>
            App Id.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessTokenData`1.UserId">
            <summary>
            User Id.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessTokenData`1.UserName">
            <summary>
            User Name.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessTokenData`1.UserEmail">
            <summary>
            User Email
            </summary>
        </member>
        <member name="P:Nano.Security.Models.AccessTokenData`1.Claims">
            <summary>
            Claims.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.BaseSignUp">
            <summary>
            Base Sign-Up (abstract).
            </summary>
        </member>
        <member name="P:Nano.Security.Models.BaseSignUp.Roles">
            <summary>
            Roles.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.BaseSignUp.Claims">
            <summary>
            Claims.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.ChangeEmail">
            <summary>
            Change Email.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ChangeEmail.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ChangeEmail.UserId">
            <summary>
            User Id.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ChangeEmail.NewEmailAddress">
            <summary>
            New Email Address.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.ChangeEmailToken">
            <summary>
            Change Email Token
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ChangeEmailToken.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ChangeEmailToken.EmailAddress">
            <summary>
            Email Address.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ChangeEmailToken.NewEmailAddress">
            <summary>
            New Email Address.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.ChangePassword">
            <summary>
            Change Password.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ChangePassword.UserId">
            <summary>
            User Id.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ChangePassword.OldPassword">
            <summary>
            Old Password.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ChangePassword.NewPassword">
            <summary>
            New Password.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ChangePassword.ConfirmNewPassword">
            <summary>
            Confirm New Passowrd.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.ConfirmEmail">
            <summary>
            Confirm Email.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ConfirmEmail.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ConfirmEmail.EmailAddress">
            <summary>
            Email Address.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.ConfirmEmailToken">
            <summary>
            Confirm Email Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ConfirmEmailToken.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ConfirmEmailToken.EmailAddress">
            <summary>
            Email.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.ExternalLoginData">
            <summary>
            External Login Data.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ExternalLoginData.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ExternalLoginData.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ExternalLoginData.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ExternalLoginData.Address">
            <summary>
            Address.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ExternalLoginData.BirthDay">
            <summary>
            Birth Day.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.ExternalLoginResponse">
            <summary>
            External Login Response.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ExternalLoginResponse.AccessToken">
            <summary>
            Access Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ExternalLoginResponse.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.IdentityUserTokenExpiry`1">
            <summary>
            Identity User Token Expiry.
            </summary>
            <typeparam name="TIdentity"></typeparam>
        </member>
        <member name="P:Nano.Security.Models.IdentityUserTokenExpiry`1.ExpireAt">
            <summary>
            Expire At.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.Login">
            <summary>
            Login.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.Login.AppId">
            <summary>
            App Id.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.Login.Username">
            <summary>
            Username.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.Login.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.Login.IsRememerMe">
            <summary>
            Is Remember Me.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.Login.IsRefreshable">
            <summary>
            Is Refreshable.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.LoginExternal">
            <summary>
            Login External.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginExternal.AppId">
            <summary>
            App Id.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginExternal.IsRememerMe">
            <summary>
            Is Remember Me.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginExternal.IsRefreshable">
            <summary>
            Is Refreshable.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.LoginExternalProvider">
            <summary>
            Login External Provider.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginExternalProvider.LoginProvider">
            <summary>
            Login Provider.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginExternalProvider.ProviderKey">
            <summary>
            Provider Key.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginExternalProvider.AccessToken">
            <summary>
            Access Token.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.LoginExternalTransient">
            <summary>
            Login External Transient.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginExternalTransient.Roles">
            <summary>
            Roles.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginExternalTransient.Claims">
            <summary>
            Claims.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.LoginProvider">
            <summary>
            Login Provider.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginProvider.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginProvider.DisplayName">
            <summary>
            Display Name.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.LoginRefresh">
            <summary>
            Login Refresh.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginRefresh.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.LoginRefresh.RefreshToken">
            <summary>
            Refresh Token.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.RefreshToken">
            <summary>
            Refresh Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.RefreshToken.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.RefreshToken.ExpireAt">
            <summary>
            Expire At.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.RefreshToken.IsExpired">
            <summary>
            Is Expired.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.ResetPassword">
            <summary>
            Reset Password.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ResetPassword.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ResetPassword.EmailAddress">
            <summary>
            Email Address.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ResetPassword.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.ResetPasswordToken">
            <summary>
            Reset Password Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ResetPasswordToken.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.ResetPasswordToken.EmailAddress">
            <summary>
            Email Address.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.SetPassword">
            <summary>
            Set Password.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.SetPassword.UserId">
            <summary>
            User Id.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.SetPassword.NewPassword">
            <summary>
            New Password.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.SetUsername">
            <summary>
            Set Username.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.SetUsername.UserId">
            <summary>
            User Id.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.SetUsername.NewUsername">
            <summary>
            New Username.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.SignUp">
            <summary>
            Sign Up.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.SignUp.EmailAddress">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.SignUp.Username">
            <summary>
            Username.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.SignUp.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.SignUp.ConfirmPassword">
            <summary>
            Confirm Password. 
            </summary>
        </member>
        <member name="T:Nano.Security.Models.SignUp`1">
            <summary>
            Sign Up.
            </summary>
            <typeparam name="TUser">The user type.</typeparam>
        </member>
        <member name="T:Nano.Security.Models.SignUp`2">
            <summary>
            Sign Up.
            </summary>
            <typeparam name="TUser">The user type.</typeparam>
            <typeparam name="TIdentity">The identity type.</typeparam>
        </member>
        <member name="P:Nano.Security.Models.SignUp`2.User">
            <summary>
            User.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.SignUpExternal">
            <summary>
            Sign Up External.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.SignUpExternal.EmailAddress">
            <summary>
            Email Address.
            </summary>
        </member>
        <member name="P:Nano.Security.Models.SignUpExternal.ExternalLogin">
            <summary>
            External Login.
            </summary>
        </member>
        <member name="T:Nano.Security.Models.SignUpExternal`1">
            <summary>
            Sign Up External.
            </summary>
            <typeparam name="TUser">The user type</typeparam>
        </member>
        <member name="T:Nano.Security.Models.SignUpExternal`2">
            <summary>
            Sign Up External.
            </summary>
            <typeparam name="TUser">The user type.</typeparam>
            <typeparam name="TIdentity">The identity type.</typeparam>
        </member>
        <member name="P:Nano.Security.Models.SignUpExternal`2.User">
            <summary>
            User.
            </summary>
        </member>
        <member name="T:Nano.Security.SecurityOptions">
            <summary>
            Security Options.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.SectionName">
            <summary>
            Section Name.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.IsAuth">
            <summary>
            Is Auth.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.Jwt">
            <summary>
            Jwt Options.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.User">
            <summary>
            User Options.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.SignIn">
            <summary>
            Sign In Options.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.Lockout">
            <summary>
            Lockout Options.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.Password">
            <summary>
            Password Options.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.ExternalLogins">
            <summary>
            External Logins Options.
            </summary>
        </member>
        <member name="T:Nano.Security.SecurityOptions.JwtOptions">
            <summary>
            Jwt Options (nested class)
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.JwtOptions.Issuer">
            <summary>
            Issuer.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.JwtOptions.Audience">
            <summary>
            Audience.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.JwtOptions.SecretKey">
            <summary>
            Secret Key.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.JwtOptions.ExpirationInHours">
            <summary>
            Expiration In Hours.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.JwtOptions.RefreshExpirationInHours">
            <summary>
            Refresh Expiration In Hours.
            </summary>
        </member>
        <member name="T:Nano.Security.SecurityOptions.UserOptions">
            <summary>
            User Options (nested class).
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.UserOptions.RequireUniqueEmail">
            <summary>
            Require Unique Email.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.UserOptions.AllowedUserNameCharacters">
            <summary>
            Allowed User Name Characters.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.UserOptions.AdminUsername">
            <summary>
            Admin Username.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.UserOptions.AdminPassword">
            <summary>
            Admin Password.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.UserOptions.AdminEmailAddress">
            <summary>
            Admin Email Address.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.UserOptions.DefaultRoles">
            <summary>
            Default Roles.
            </summary>
        </member>
        <member name="T:Nano.Security.SecurityOptions.SignInOptions">
            <summary>
            Sign-In Options (nested class).
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.SignInOptions.RequireConfirmedEmail">
            <summary>
            Require Confirmed Email-
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.SignInOptions.RequireConfirmedPhoneNumber">
            <summary>
            Require Confirmed PhoneNumber.
            </summary>
        </member>
        <member name="T:Nano.Security.SecurityOptions.LockoutOptions">
            <summary>
            Lockout Options (nested class).
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.LockoutOptions.AllowedForNewUsers">
            <summary>
            Allowed For New Users.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.LockoutOptions.MaxFailedAccessAttempts">
            <summary>
            Max Failed Access Attempts.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.LockoutOptions.DefaultLockoutTimeSpan">
            <summary>
            Default Lockout TimeSpan.
            </summary>
        </member>
        <member name="T:Nano.Security.SecurityOptions.PasswordOptions">
            <summary>
            Password Options (nested class).
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.PasswordOptions.RequireDigit">
            <summary>
            Require Digit.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.PasswordOptions.RequireNonAlphanumeric">
            <summary>
            Require Non Alphanumeric.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.PasswordOptions.RequireLowercase">
            <summary>
            Require Lowercase.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.PasswordOptions.RequireUppercase">
            <summary>
            Require Uppercase.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.PasswordOptions.RequiredLength">
            <summary>
            Required Length.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.PasswordOptions.RequiredUniqueCharacters">
            <summary>
            Required Unique Characters.
            </summary>
        </member>
        <member name="T:Nano.Security.SecurityOptions.ExternalLoginOptions">
            <summary>
            External Login Options.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.ExternalLoginOptions.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.ExternalLoginOptions.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:Nano.Security.SecurityOptions.ExternalLoginOptions.Secret">
            <summary>
            Secret.
            </summary>
        </member>
    </members>
</doc>
