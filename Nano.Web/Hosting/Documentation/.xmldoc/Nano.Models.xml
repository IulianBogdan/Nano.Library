<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nano.Models</name>
    </assembly>
    <members>
        <member name="T:Nano.Models.Attributes.IncludeAttribute">
            <summary>
            Include Attribute.
            </summary>
        </member>
        <member name="T:Nano.Models.Attributes.SwaggerExcludeAttribute">
            <summary>
            Swagger Exclude Attribute.
            </summary>
        </member>
        <member name="T:Nano.Models.BaseEntity">
            <inheritdoc />
        </member>
        <member name="T:Nano.Models.BaseEntityIdentity`1">
            <inheritdoc cref="T:Nano.Models.Interfaces.IEntityIdentity`1"/>
        </member>
        <member name="P:Nano.Models.BaseEntityIdentity`1.Id">
            <inheritdoc />
        </member>
        <member name="T:Nano.Models.BaseEntityUser`1">
            <summary>
            Base Entity User (abstract).
            </summary>
        </member>
        <member name="P:Nano.Models.BaseEntityUser`1.IsDeleted">
            <inheritdoc />
        </member>
        <member name="P:Nano.Models.BaseEntityUser`1.IdentityUserId">
            <inheritdoc />
        </member>
        <member name="P:Nano.Models.BaseEntityUser`1.IdentityUser">
            <inheritdoc />
        </member>
        <member name="T:Nano.Models.Const.HttpContentType">
            <summary>
            Http Content Type.
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.HTML">
            <summary>
            Html ("text/html").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.XHTML">
            <summary>
            Xhtml ("text/xhtml").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.TEXT">
            <summary>
            Text ("text/plain").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.CSV">
            <summary>
            Csv ("text/csv").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.PNG">
            <summary>
            Png ("image/png").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.BMP">
            <summary>
            Bmp ("image/bmp").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.JPEG">
            <summary>
            Jpeg / Jpg ("image/jpeg").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.GIF">
            <summary>
            Gif ("image/gif").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.TIFF">
            <summary>
            Tiff ("image/tiff").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.ICON">
            <summary>
            Icon ("image/x-icon").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.SVG">
            <summary>
            Svg ("image/svg+xml").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.AUDIO_MPEG">
            <summary>
            Mpeg ("audio/mpeg").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.WMA">
            <summary>
            Wma ("audio/x-ms-wma").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.REAL_AUDIO">
            <summary>
            Real Audio ("audio/vnd.rn-realaudio").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.WAV">
            <summary>
            Wav ("audio/x-wav").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.VIDOE_MPEG">
            <summary>
            Video Mpeg ("video/mpeg").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.MP4">
            <summary>
            MP4 ("video/mp4").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.QUICK_TIME">
            <summary>
            Quick Time ("video/quicktime").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.WMV">
            <summary>
            Wav ("video/x-ms-wmv").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.MS_VIDEO">
            <summary>
            MS Video ("video/x-msvideo").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.FLV">
            <summary>
            MS VIdoe ("video/x-flv").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.WEB_M">
            <summary>
            Web M ("video/webm").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.PDF">
            <summary>
            Pdf ("application/pdf").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.ZIP">
            <summary>
            Pdf ("application/zip").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.XML">
            <summary>
            Xml ("application/xml").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.JSON">
            <summary>
            Json ("application/json").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.FORM_ENCODED">
            <summary>
            Form ("application/x-www-form-urlencoded").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.FORM">
            <summary>
            Form ("application/x-www-form-urlencoded").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.OCTET_STREM">
            <summary>
            Octet ("application/octet-stream").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.EXCEL">
            <summary>
            Excel ("application/vnd.ms-excel").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.EXCEL_OPEN_FORMAT">
            <summary>
            Excel Open Document Format ("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.POWERPOINT">
            <summary>
            PowerPoint ("application/vnd.ms-powerpoint").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.POWERPOINT_OPEN_FORMAT">
            <summary>
            PowerPoint Open Document Format ("application/vnd.openxmlformats-officedocument.presentationml.presentation").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.WORD">
            <summary>
            Word ("application/msword").
            </summary>
        </member>
        <member name="F:Nano.Models.Const.HttpContentType.WORD_OPEN_FORMAT">
            <summary>
            Word Open Document Format ("application/vnd.openxmlformats-officedocument.wordprocessingml.document").
            </summary>
        </member>
        <member name="T:Nano.Models.Criterias.BaseQueryCriteria">
            <inheritdoc />
        </member>
        <member name="M:Nano.Models.Criterias.BaseQueryCriteria.GetExpressions">
            <inheritdoc />
        </member>
        <member name="T:Nano.Models.Criterias.DefaultQueryCriteria">
            <inheritdoc />
        </member>
        <member name="P:Nano.Models.Criterias.DefaultQueryCriteria.AfterAt">
            <summary>
            After At.
            </summary>
        </member>
        <member name="P:Nano.Models.Criterias.DefaultQueryCriteria.BeforeAt">
            <summary>
            Before At.
            </summary>
        </member>
        <member name="M:Nano.Models.Criterias.DefaultQueryCriteria.GetExpressions">
            <inheritdoc />
        </member>
        <member name="T:Nano.Models.Criterias.DefaultQueryCriteriaSpatial">
            <inheritdoc cref="T:Nano.Models.Criterias.Interfaces.IQueryCriteriaSpatial"/>
        </member>
        <member name="P:Nano.Models.Criterias.DefaultQueryCriteriaSpatial.Geometry">
            <inheritdoc />
        </member>
        <member name="T:Nano.Models.Criterias.Interfaces.IQueryCriteriaSpatial">
            <summary>
            Query Criteria Spatial.
            </summary>
        </member>
        <member name="P:Nano.Models.Criterias.Interfaces.IQueryCriteriaSpatial.Geometry">
            <summary>
            Geometry.
            </summary>
        </member>
        <member name="T:Nano.Models.DefaultEntity">
            <inheritdoc />
        </member>
        <member name="M:Nano.Models.DefaultEntity.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Nano.Models.DefaultEntity`1">
            <inheritdoc cref="T:Nano.Models.Interfaces.IEntityWritable"/>
        </member>
        <member name="P:Nano.Models.DefaultEntity`1.IsDeleted">
            <inheritdoc />
        </member>
        <member name="P:Nano.Models.DefaultEntity`1.CreatedAt">
            <summary>
            Created At.
            </summary>
        </member>
        <member name="T:Nano.Models.DefaultEntitySpatial">
            <inheritdoc />
        </member>
        <member name="T:Nano.Models.DefaultEntitySpatial`1">
            <inheritdoc cref="T:Nano.Models.Interfaces.IEntitySpatial"/>
        </member>
        <member name="P:Nano.Models.DefaultEntitySpatial`1.Geometry">
            <inheritdoc />
        </member>
        <member name="T:Nano.Models.DefaultEntityUser">
            <summary>
            Default Entity User.
            </summary>
        </member>
        <member name="M:Nano.Models.DefaultEntityUser.#ctor">
            <inheritdoc />
        </member>
        <member name="T:Nano.Models.DefaultEntityUser`1">
            <inheritdoc cref="T:Nano.Models.Interfaces.IEntityWritable"/>
        </member>
        <member name="P:Nano.Models.DefaultEntityUser`1.CreatedAt">
            <summary>
            Created At.
            </summary>
        </member>
        <member name="T:Nano.Models.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="P:Nano.Models.Error.Summary">
            <summary>
            Message.
            </summary>
        </member>
        <member name="P:Nano.Models.Error.Exceptions">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:Nano.Models.Error.IsTranslated">
            <summary>
            Is Translated.
            </summary>
        </member>
        <member name="M:Nano.Models.Error.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Models.Error.#ctor(System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/>.</param>
        </member>
        <member name="M:Nano.Models.Error.ToString">
            <inheritdoc />
        </member>
        <member name="T:Nano.Models.Exceptions.BadRequestException">
            <summary>
            Bad Request Exception.
            </summary>
        </member>
        <member name="M:Nano.Models.Exceptions.BadRequestException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Nano.Models.Exceptions.PermissionDeniedException">
            <summary>
            Permission Denied Exception.
            </summary>
        </member>
        <member name="T:Nano.Models.Exceptions.TranslationException">
            <summary>
            Translation Exception.
            </summary>
        </member>
        <member name="M:Nano.Models.Exceptions.TranslationException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Nano.Models.Extensions.DateTimeOffsetExtensions">
            <summary>
            DateTimeOffset Extensions.
            </summary>
        </member>
        <member name="M:Nano.Models.Extensions.DateTimeOffsetExtensions.GetEpochTime(System.DateTimeOffset)">
            <summary>
            Gets the number of seconds since <see cref="F:Nano.Models.Extensions.DateTimeOffsetExtensions.epoch"/> (Unix).
            </summary>
            <param name="at">The <see cref="T:System.DateTimeOffset"/>.</param>
            <returns>The number of seconds</returns>
        </member>
        <member name="T:Nano.Models.Extensions.ObjectExtensions">
            <summary>
            Object Extensions.
            </summary>
        </member>
        <member name="M:Nano.Models.Extensions.ObjectExtensions.Parse``1(System.Object)">
            <summary>
            Parse.
            Parses the object to type of <typeparamref name="T"></typeparamref>.
            </summary>
            <typeparam name="T">the type to parse to.</typeparam>
            <param name="object">the object to parse.</param>
            <returns>The parsed object.</returns>
        </member>
        <member name="T:Nano.Models.Extensions.StreamExtensions">
            <summary>
            Stream Extensions.
            </summary>
        </member>
        <member name="M:Nano.Models.Extensions.StreamExtensions.ReadAllAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Reads all bytes in the <see cref="T:System.IO.Stream"/> and returns the content as string.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The content as string.</returns>
        </member>
        <member name="M:Nano.Models.Extensions.StreamExtensions.ReadAllBytesAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Reads all bytes in the <see cref="T:System.IO.Stream"/> and returns the content as byte array.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The content as byte array.</returns>
        </member>
        <member name="T:Nano.Models.Extensions.StringExtensions">
            <summary>
            String Extensions.
            </summary>
        </member>
        <member name="M:Nano.Models.Extensions.StringExtensions.Substring(System.String,System.String)">
            <summary>
            Returns a substring consisting of all characters after the index of the passed <paramref name="indexOf"/>
            from the passed <paramref name="string"/>.
            </summary>
            <param name="string">The <see cref="T:System.String"/>.</param>
            <param name="indexOf">The <see cref="T:System.String"/> to find indexOf in the <paramref name="string"/>.</param>
            <returns>The substring.</returns>
        </member>
        <member name="M:Nano.Models.Extensions.StringExtensions.TrySubstring(System.String,System.String,System.String@)">
            <summary>
            Tries to get a substring consisting of all characters after the index of the passed <paramref name="indexOf"/>
            from the passed <paramref name="string"/>.
            </summary>
            <param name="string">The <see cref="T:System.String"/>.</param>
            <param name="indexOf">The <see cref="T:System.String"/> to find indexOf in the <paramref name="string"/>.</param>
            <param name="result">The substring.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating success or not.</returns>
        </member>
        <member name="T:Nano.Models.Extensions.TypeExtensions">
            <summary>
            Type Extensions.
            </summary>
        </member>
        <member name="M:Nano.Models.Extensions.TypeExtensions.GetFriendlyName(System.Type)">
            <summary>
            Gets a friendly display name for the <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> from which to get all parent types.</param>
            <returns>A friendly display name.</returns>
        </member>
        <member name="M:Nano.Models.Extensions.TypeExtensions.IsTypeOf(System.Type,System.Type)">
            <summary>
            Gets whehter the passed <paramref name="type"/> derives or implements the passed <paramref name="baseType"/>.
            All base classes and interfaces are inspected.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> from which to determine, if the passed <paramref name="baseType"/> is parent.</param>
            <param name="baseType">The <see cref="T:System.Type"/> that be inherited or implemented by the passed <paramref name="type"/>.</param>
            <returns>True or false, depending on whehter the <paramref name="type"/> implements or derives from <paramref name="baseType"/>.</returns>
        </member>
        <member name="M:Nano.Models.Extensions.TypeExtensions.IsSimple(System.Type)">
            <summary>
            Is Simple.
            Checks if the <see cref="T:System.Type"/> is simple.
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <returns>Boolean indicating if the type is simple.</returns>
        </member>
        <member name="T:Nano.Models.Helpers.TypesHelper">
            <summary>
            Types Helper
            </summary>
        </member>
        <member name="M:Nano.Models.Helpers.TypesHelper.GetAllTypes">
            <summary>
            Get All Types.
            </summary>
            <returns>A collection of types.</returns>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntity">
            <summary>
            Entity interface.
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntityAuditable">
            <summary>
            Entity Auditable interface.
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntityAuditableNegated">
            <summary>
            Entity Auditable Negated interface.
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntityCreatable">
            <summary>
            Entity Creatable.
            Implementing entities are creatable.
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntityCreatableAndUpdatable">
            <summary>
            Entity Creatable and updatable.
            Implementing entities are creatable and updatable.
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntityDeletable">
            <summary>
            Entity Deletable.
            Implementing entities are deletable.
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntityDeletableSoft">
            <summary>
            Entity Deletable.
            Implementing entities are deletable.
            </summary>
        </member>
        <member name="P:Nano.Models.Interfaces.IEntityDeletableSoft.IsDeleted">
            <summary>
            Deleted at.
            Indicates whether the entity is deleted or not. Zero means active (true) and anything greater than zero means deleted (false).
            THe Unix-based time in miliseconds is stored, in order for allowing unique indexes with soft-deletetion.
            NOTE: Only active instances are returned from queries, when filters are enabled (default behavior).
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntityIdentity`1">
            <summary>
            Entity identity inteface.
            Implementing <see cref="T:Nano.Models.Interfaces.IEntity"/>'s having identity property.
            </summary>
            <typeparam name="TIdentity">The type of <see cref="P:Nano.Models.Interfaces.IEntityIdentity`1.Id"/>.</typeparam>
        </member>
        <member name="P:Nano.Models.Interfaces.IEntityIdentity`1.Id">
            <summary>
            Id.
            Uniquely identifies the <see cref="T:Nano.Models.Interfaces.IEntity"/>.
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntitySpatial">
            <summary>
            Entity Spatial.
            Implementing entities are queryable spatially, having a property of <see cref="P:Nano.Models.Interfaces.IEntitySpatial.Geometry"/> type.
            </summary>
        </member>
        <member name="P:Nano.Models.Interfaces.IEntitySpatial.Geometry">
            <summary>
            Geometry.
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntityUpdatable">
            <summary>
            Entity Deletable.
            Implementing entities are updatable.
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntityUser`1">
            <summary>
            Entity User inteface.
            </summary>
            <typeparam name="TIdentity">The identity type.</typeparam>
        </member>
        <member name="P:Nano.Models.Interfaces.IEntityUser`1.IdentityUserId">
            <summary>
            Identity User Id.
            </summary>
        </member>
        <member name="P:Nano.Models.Interfaces.IEntityUser`1.IdentityUser">
            <summary>
            Identity User.
            </summary>
        </member>
        <member name="T:Nano.Models.Interfaces.IEntityWritable">
            <summary>
            Entity Writable.
            Implementing entities are creatable, updatable and deletable.
            Implements <see cref="T:Nano.Models.Interfaces.IEntityCreatable"/>, <see cref="T:Nano.Models.Interfaces.IEntityUpdatable"/> and <see cref="T:Nano.Models.Interfaces.IEntityDeletable"/>.
            </summary>
        </member>
        <member name="T:Nano.Models.Serialization.Const.Globals">
            <summary>
            Globals.
            </summary>
        </member>
        <member name="F:Nano.Models.Serialization.Const.Globals.jsonSerializerSettings">
            <summary>
            Json Serializer Settings.
            </summary>
        </member>
        <member name="T:Nano.Models.Serialization.Json.EnumerableTypeInfoResolver">
            <summary>
            Enumerable Type Info Resolver.
            </summary>
        </member>
        <member name="M:Nano.Models.Serialization.Json.EnumerableTypeInfoResolver.IgnoreEmptyCollections(System.Text.Json.Serialization.Metadata.JsonTypeInfo)">
            <summary>
            Ignore Empty Collections.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="T:Nano.Models.Serialization.Json.LazyLoaderTypeInfoResolver">
            <summary>
            Lazy Loader Type Info Resolver.
            </summary>
        </member>
        <member name="M:Nano.Models.Serialization.Json.LazyLoaderTypeInfoResolver.IgnoreLazyLoader(System.Text.Json.Serialization.Metadata.JsonTypeInfo)">
            <summary>
            Ignore Empty Collections.
            </summary>
            <param name="typeInfo">The <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo"/></param>
        </member>
        <member name="T:Nano.Models.Serialization.XmlConvert">
            <summary>
            Xml Convert.
            </summary>
        </member>
        <member name="M:Nano.Models.Serialization.XmlConvert.SerializeObject``1(``0,System.String,System.Xml.Serialization.XmlSerializerNamespaces,System.Type[])">
            <summary>
            Serializes an instance of type <typeparamref name="T"/> to xml.
            </summary>
            <typeparam name="T">The type to serialize.</typeparam>
            <param name="object">The object instance to serialize.</param>
            <param name="defaultNamespace">The default namespace used in the xml.</param>
            <param name="namespaces">The namespaces.</param>
            <param name="knownTypes">The known types.</param>
            <returns>A <see cref="T:System.String"/> formatted as xml.</returns>
        </member>
        <member name="M:Nano.Models.Serialization.XmlConvert.DeserializeObject``1(System.String,System.String,System.Type[])">
            <summary>
            Deserializes a xml strong to an instance of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type to deserialize the xml into.</typeparam>
            <param name="xml">The xml to deserialize.</param>
            <param name="defaultNamespace">The default namespace used in the xml.</param>
            <param name="knownTypes">The known types.</param>
            <returns>The instance of type <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Nano.Models.Types.Address">
            <summary>
            Address.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Address.String">
            <summary>
            String.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Address.Location">
            <summary>
            Location.
            </summary>
        </member>
        <member name="T:Nano.Models.Types.Distance">
            <summary>
            Distance.
            </summary>
        </member>
        <member name="F:Nano.Models.Types.Distance.RATIO_METER_TO_MILE">
            <summary>
            Ratio meter to mile.
            </summary>
        </member>
        <member name="F:Nano.Models.Types.Distance.RATIO_METER_TO_KILOMETER">
            <summary>
            Ratio meter to kilometer.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Distance.Meters">
            <summary>
            Meters.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Distance.Miles">
            <summary>
            Miles.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Distance.Kilometers">
            <summary>
            Kilometers.
            </summary>
        </member>
        <member name="T:Nano.Models.Types.Duration">
            <summary>
            Duration.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Duration.Time">
            <summary>
            Time.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Duration.Adjustment">
            <summary>
            Adjustment.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Duration.Total">
            <summary>
            Total.
            </summary>
        </member>
        <member name="T:Nano.Models.Types.EmailAddress">
            <summary>
            Email Address.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.EmailAddress.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.EmailAddress.IsValid">
            <summary>
            Is Valid.
            </summary>
        </member>
        <member name="T:Nano.Models.Types.Location">
            <summary>
            Location.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Location.Latitude">
            <summary>
            Latitude.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Location.Longitude">
            <summary>
            Longitude.
            </summary>
        </member>
        <member name="M:Nano.Models.Types.Location.ToString">
            <inheritdoc />
        </member>
        <member name="M:Nano.Models.Types.Location.FromString(System.String)">
            <summary>
            Converts a <see cref="T:System.String"/> into a <see cref="T:Nano.Models.Types.Location"/>.
            Format: "latitude,longitude".
            </summary>
            <returns>The <see cref="T:Nano.Models.Types.Location"/>.</returns>
        </member>
        <member name="T:Nano.Models.Types.Percentage">
            <summary>
            Percentage.
            </summary>
        </member>
        <member name="P:Nano.Models.Types.Percentage.AsDecimal">
            <summary>
            Gets the percentage value as a <see cref="T:System.Decimal"/>.
            </summary>
        </member>
        <member name="M:Nano.Models.Types.Percentage.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Models.Types.Percentage.#ctor(System.Double)">
            <summary>
            Constructor that accepts a <see cref="T:System.Double"/>.
            </summary>
            <param name="double"></param>
        </member>
        <member name="M:Nano.Models.Types.Percentage.#ctor(System.Decimal)">
            <summary>
            Constructor that accepts a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="decimal"></param>
        </member>
        <member name="T:Nano.Models.Types.PhoneNumber">
            <summary>
            Phone Number
            </summary>
        </member>
        <member name="P:Nano.Models.Types.PhoneNumber.Number">
            <summary>
            Number (E164 format).
            </summary>
        </member>
    </members>
</doc>
