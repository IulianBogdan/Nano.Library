<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nano.Web</name>
    </assembly>
    <members>
        <member name="T:Nano.Web.Api.ApiOptions">
            <summary>
            Api Options.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.ApiOptions.Host">
            <summary>
            Host.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.ApiOptions.Root">
            <summary>
            Root.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.ApiOptions.Port">
            <summary>
            Port.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.ApiOptions.UseSsl">
            <summary>
            Use Ssl.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.ApiOptions.UseExposeErrors">
            <summary>
            Use Expose Erros.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.ApiOptions.Login">
            <summary>
            Login.
            </summary>
        </member>
        <member name="T:Nano.Web.Api.BaseApi">
            <summary>
            Base Api (abstract).
            </summary>
        </member>
        <member name="M:Nano.Web.Api.BaseApi.#ctor(Nano.Web.Api.ApiOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="apiOptions">The <see cref="T:Nano.Web.Api.ApiOptions"/>.</param>
        </member>
        <member name="M:Nano.Web.Api.BaseApi.CustomAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Invokes a custom request and returns void.
            </summary>
            <typeparam name="TRequest">The request type.</typeparam>
            <param name="request">The instance of type <typeparamref name="TRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Nothing (void).</returns>
        </member>
        <member name="M:Nano.Web.Api.BaseApi.CustomAsync``2(``0,System.Threading.CancellationToken)">
            <summary>
            Invokes a custom request and returns a response.
            </summary>
            <typeparam name="TRequest">The request type.</typeparam>
            <typeparam name="TResponse">The response type.</typeparam>
            <param name="request">The instance of type <typeparamref name="TRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The instance of <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="M:Nano.Web.Api.BaseApi.Invoke``2(``0,System.Threading.CancellationToken)">
            <summary>
            Invokes the request, and returns the response.
            </summary>
            <typeparam name="TRequest">The request type.</typeparam>
            <typeparam name="TResponse">The response type.</typeparam>
            <param name="request">The instance of type <typeparamref name="TRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The instance of <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="M:Nano.Web.Api.BaseApi.Invoke``3(``1,System.Threading.CancellationToken)">
            <summary>
            Invokes the request, and returns the response.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TRequest">The request type.</typeparam>
            <typeparam name="TResponse">The response type.</typeparam>
            <param name="request">The instance of type <typeparamref name="TRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The instance of <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="T:Nano.Web.Api.DefaultApi">
            <summary>
            Default Api.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.#ctor(Nano.Web.Api.ApiOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="apiOptions">The <see cref="T:Nano.Web.Api.ApiOptions"/>.</param>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.LogInAsync(Nano.Web.Api.Requests.Auth.LogInRequest,System.Threading.CancellationToken)">
            <summary>
            Log In Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Auth.LogInRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Nano.Security.Models.AccessToken"/>.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.LogInExternalAsync(Nano.Web.Api.Requests.Auth.LogInExternalRequest,System.Threading.CancellationToken)">
            <summary>
            Log In External Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Auth.LogInExternalRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The <see cref="T:Nano.Security.Models.AccessToken"/>.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.LogOutAsync(Nano.Web.Api.Requests.Auth.LogOutRequest,System.Threading.CancellationToken)">
            <summary>
            Log Out Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Auth.LogOutRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void..</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.GetExternalSchemesAsync(Nano.Web.Api.Requests.Auth.GetExternalSchemesRequest,System.Threading.CancellationToken)">
            <summary>
            Get External Schemes Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Auth.GetExternalSchemesRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>A collection of <see cref="T:Nano.Security.Models.LoginProvider"/>'s.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.IndexAsync``1(Nano.Web.Api.Requests.IndexRequest,System.Threading.CancellationToken)">
            <summary>
            Index.
            Invokes the 'index' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.IndexRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The matching entities.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.DetailsAsync``1(Nano.Web.Api.Requests.DetailsRequest,System.Threading.CancellationToken)">
            <summary>
            Details.
            Invokes the 'details' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.DetailsRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The matching entity.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.DetailsManyAsync``1(Nano.Web.Api.Requests.DetailsManyRequest,System.Threading.CancellationToken)">
            <summary>
            Details Many.
            Invokes the 'details' endpoint of the api, with multiple id's.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.DetailsManyRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The matching entities.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.QueryAsync``2(Nano.Web.Api.Requests.QueryRequest{``1},System.Threading.CancellationToken)">
            <summary>
            Query.
            Invokes the 'query' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <typeparam name="TCriteria">The criteria type</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.QueryRequest`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The matching entities.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.QueryFirstAsync``2(Nano.Web.Api.Requests.QueryFirstRequest{``1},System.Threading.CancellationToken)">
            <summary>
            Query.
            Invokes the 'query/first' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <typeparam name="TCriteria">The criteira type</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.QueryFirstRequest`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The first match entity.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.QueryCountAsync``2(Nano.Web.Api.Requests.QueryCountRequest{``1},System.Threading.CancellationToken)">
            <summary>
            Query.
            Invokes the 'query/first' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <typeparam name="TCriteria">The criteria type</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.QueryCountRequest`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The count of matching entities.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.CreateAsync``1(Nano.Web.Api.Requests.CreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create.
            Invokes the 'create' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.CreateRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.CreateManyAsync``1(Nano.Web.Api.Requests.CreateManyRequest,System.Threading.CancellationToken)">
            <summary>
            Create Many.
            Invokes the 'create/many' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.CreateManyRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The created entities.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.EditAsync``1(Nano.Web.Api.Requests.EditRequest,System.Threading.CancellationToken)">
            <summary>
            Edit.
            Invokes the 'edit' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.EditRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The updated entity.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.EditManyAsync``1(Nano.Web.Api.Requests.EditManyRequest,System.Threading.CancellationToken)">
            <summary>
            Edit Many.
            Invokes the 'Edit/many' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.EditManyRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The updated entities.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.EditQueryAsync``1(Nano.Web.Api.Requests.EditQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Edit Many.
            Invokes the 'Edit/query' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.EditManyRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The updated entities.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.DeleteAsync``1(Nano.Web.Api.Requests.DeleteRequest,System.Threading.CancellationToken)">
            <summary>
            Delete.
            Invokes the 'delete' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.DeleteRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.DeleteManyAsync``1(Nano.Web.Api.Requests.DeleteManyRequest,System.Threading.CancellationToken)">
            <summary>
            Delete Many.
            Invokes the 'delete/many' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.DeleteManyRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:Nano.Web.Api.DefaultApi.DeleteQueryAsync``1(Nano.Web.Api.Requests.DeleteQueryRequest,System.Threading.CancellationToken)">
            <summary>
            Delete Query.
            Invokes the 'delete/query' endpoint of the api.
            </summary>
            <typeparam name="TEntity">The entity type.</typeparam>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.DeleteManyRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="T:Nano.Web.Api.IdentityApi">
            <summary>
            Default Identity Api.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.#ctor(Nano.Web.Api.ApiOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="apiOptions">The <see cref="T:Nano.Web.Api.ApiOptions"/>.</param>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.SignUpAsync``1(Nano.Web.Api.Requests.Identity.SingUpRequest{``0},System.Threading.CancellationToken)">
            <summary>
            Sign Up Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.SingUpRequest`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The instance of <typeparamref name="TUser"/>.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.SignUpExternalAsync``1(Nano.Web.Api.Requests.Identity.SingUpExternalRequest{``0},System.Threading.CancellationToken)">
            <summary>
            Sign Up External Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.SingUpExternalRequest`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The instance of <typeparamref name="TUser"/>.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.SetUsernameAsync(Nano.Web.Api.Requests.Identity.SetUsernameRequest,System.Threading.CancellationToken)">
            <summary>
            Set Username Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.SetUsernameRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.SetPasswordAsync(Nano.Web.Api.Requests.Identity.SetPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Set Password Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.SetPasswordRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.ResetPasswordAsync(Nano.Web.Api.Requests.Identity.ResetPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Reset Password Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.ResetPasswordRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.ChangePasswordAsync(Nano.Web.Api.Requests.Identity.ChangePasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Change Password Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.ChangePasswordRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.ChangeEmailAsync(Nano.Web.Api.Requests.Identity.ChangeEmailRequest,System.Threading.CancellationToken)">
            <summary>
            Change Email Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.ChangeEmailRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.ConfirmEmailAsync(Nano.Web.Api.Requests.Identity.ConfirmEmailRequest,System.Threading.CancellationToken)">
            <summary>
            Confirm Email Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.ConfirmEmailRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.GetChangeEmailTokenAsync(Nano.Web.Api.Requests.Identity.GetChangeEmailTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Get Change Email Token Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.GetChangeEmailTokenRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.GetConfirmEmailTokenAsync(Nano.Web.Api.Requests.Identity.GetConfirmEmailTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Get Confirm Email Token Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.GetConfirmEmailTokenRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.GetResetPasswordTokenAsync(Nano.Web.Api.Requests.Identity.GetResetPasswordTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Get Reset Password Token Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.GetResetPasswordTokenRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="M:Nano.Web.Api.IdentityApi.RemoveExternalLoginAsync(Nano.Web.Api.Requests.Identity.RemoveExternalLogInRequest,System.Threading.CancellationToken)">
            <summary>
            Remove External Login Async.
            </summary>
            <param name="request">The <see cref="T:Nano.Web.Api.Requests.Identity.RemoveExternalLogInRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>Void.</returns>
        </member>
        <member name="T:Nano.Web.Api.Requests.Auth.GetExternalSchemesRequest">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Auth.GetExternalSchemesRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Auth.LogInExternalRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Auth.LogInExternalRequest.LoginExternal">
            <summary>
            Login External.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Auth.LogInExternalRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Auth.LogInExternalRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Auth.LogInRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Auth.LogInRequest.Login">
            <summary>
            Login.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Auth.LogInRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Auth.LogInRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Auth.LogOutRequest">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Auth.LogOutRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.BaseRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.BaseRequest.Action">
            <summary>
            Controller.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.BaseRequest.Controller">
            <summary>
            Controller.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.BaseRequest.GetUri``1(Nano.Web.Api.ApiOptions)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.BaseRequest.GetRouteParameters">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.BaseRequest.GetQueryStringParameters">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.BaseRequestDelete">
            <summary>
            Base Request Delete.
            </summary>
        </member>
        <member name="T:Nano.Web.Api.Requests.BaseRequestGet">
            <summary>
            Base Request Get.
            </summary>
        </member>
        <member name="T:Nano.Web.Api.Requests.BaseRequestPost">
            <summary>
            Base Request Post.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.BaseRequestPost.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.CreateManyRequest">
            <summary>
            Create Many Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.CreateManyRequest.Entities">
            <summary>
            Entities.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.CreateManyRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.CreateManyRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.CreateRequest">
            <summary>
            Create Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.CreateRequest.Entity">
            <summary>
            Entity.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.CreateRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.CreateRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.CustomRequest">
            <summary>
            CustomAsync Request.
            </summary>
        </member>
        <member name="T:Nano.Web.Api.Requests.CustomRequestPost">
            <summary>
            CustomAsync Request Json.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.CustomRequestPost.Body">
            <summary>
            Body.
            The body of the request.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.CustomRequestPost.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.DeleteManyRequest">
            <summary>
            Delete Many Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.DeleteManyRequest.Ids">
            <summary>
            Ids.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.DeleteManyRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.DeleteManyRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.DeleteQueryRequest">
            <summary>
            Delete Many Query Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.DeleteQueryRequest.QueryCriteria">
            <summary>
            Query Criteria.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.DeleteQueryRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.DeleteQueryRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.DeleteRequest">
            <summary>
            Delete Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.DeleteRequest.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.DeleteRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.DeleteRequest.GetRouteParameters">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.DetailsManyRequest">
            <summary>
            Details Many Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.DetailsManyRequest.Ids">
            <summary>
            Ids.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.DetailsManyRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.DetailsManyRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.DetailsRequest">
            <summary>
            Details Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.DetailsRequest.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.DetailsRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.DetailsRequest.GetRouteParameters">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.EditManyRequest">
            <summary>
            Update Many Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.EditManyRequest.Entities">
            <summary>
            Entities.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.EditManyRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.EditManyRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.EditQueryRequest">
            <summary>
            Update Many Query Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.EditQueryRequest.Entity">
            <summary>
            Entity.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.EditQueryRequest.QueryCriteria">
            <summary>
            Query Criteria.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.EditQueryRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.EditQueryRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.EditRequest">
            <summary>
            Update Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.EditRequest.Entity">
            <summary>
            Entity.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.EditRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.EditRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.ChangeEmailRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.ChangeEmailRequest.ChangeEmail">
            <summary>
            Change Email.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.ChangeEmailRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.ChangeEmailRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.ChangePasswordRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.ChangePasswordRequest.ChangePassword">
            <summary>
            Change Password.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.ChangePasswordRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.ChangePasswordRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.ConfirmEmailRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.ConfirmEmailRequest.ConfirmEmail">
            <summary>
            Confirm Email.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.ConfirmEmailRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.ConfirmEmailRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.GetChangeEmailTokenRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.GetChangeEmailTokenRequest.EmailAddress">
            <summary>
            Email Address.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.GetChangeEmailTokenRequest.NewEmailAddress">
            <summary>
            New Email Address.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.GetChangeEmailTokenRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.GetChangeEmailTokenRequest.GetQueryStringParameters">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.GetConfirmEmailTokenRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.GetConfirmEmailTokenRequest.EmailAddress">
            <summary>
            Email Address.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.GetConfirmEmailTokenRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.GetConfirmEmailTokenRequest.GetQueryStringParameters">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.GetResetPasswordTokenRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.GetResetPasswordTokenRequest.EmailAddress">
            <summary>
            Email Address.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.GetResetPasswordTokenRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.GetResetPasswordTokenRequest.GetQueryStringParameters">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.RemoveExternalLogInRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.RemoveExternalLogInRequest.LoginExternal">
            <summary>
            Login External.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.RemoveExternalLogInRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.RemoveExternalLogInRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.ResetPasswordRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.ResetPasswordRequest.ResetPassword">
            <summary>
            Reset Password.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.ResetPasswordRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.ResetPasswordRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.SetPasswordRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.SetPasswordRequest.SetPassword">
            <summary>
            Set Password.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.SetPasswordRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.SetPasswordRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.SetUsernameRequest">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.SetUsernameRequest.SetUsername">
            <summary>
            Set Username.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.SetUsernameRequest.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.SetUsernameRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.SingUpExternalRequest`1">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.SingUpExternalRequest`1.SignUpExternal">
            <summary>
            Sign Up External.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.SingUpExternalRequest`1.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.SingUpExternalRequest`1.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Identity.SingUpRequest`1">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Api.Requests.Identity.SingUpRequest`1.SignUp">
            <summary>
            Sign Up.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.SingUpRequest`1.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Api.Requests.Identity.SingUpRequest`1.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.IndexRequest">
            <summary>
            Index Request.
            </summary>
        </member>
        <member name="P:Nano.Web.Api.Requests.IndexRequest.Query">
            <summary>
            Query.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.IndexRequest.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.IndexRequest.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.Interfaces.IRequest">
            <summary>
            Base interface for requests.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Interfaces.IRequest.GetUri``1(Nano.Web.Api.ApiOptions)">
            <summary>
            Returns the Uri for the request.
            </summary>
            <typeparam name="TResponse">The type of response.</typeparam>
            <param name="apiOptions">The <see cref="T:Nano.Web.Api.ApiOptions"/>.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:Nano.Web.Api.Requests.Interfaces.IRequest.GetQueryStringParameters">
            <summary>
            Get the collection  querystring  key/values.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.IList`1"/>.</returns>
        </member>
        <member name="M:Nano.Web.Api.Requests.Interfaces.IRequest.GetRouteParameters">
            <summary>
            Get the collection  querystring  key/values.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.IList`1"/>.</returns>
        </member>
        <member name="T:Nano.Web.Api.Requests.Interfaces.IRequestDelete">
            <summary>
            Base interface for requests (DELETE).
            </summary>
        </member>
        <member name="T:Nano.Web.Api.Requests.Interfaces.IRequestGet">
            <summary>
            Base interface for querystring requests (GET).
            </summary>
        </member>
        <member name="T:Nano.Web.Api.Requests.Interfaces.IRequestPost">
            <summary>
            Base interface for requests (POST).
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.Interfaces.IRequestPost.GetBody">
            <summary>
            Gets the body of the request.
            </summary>
            <returns>The body <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="T:Nano.Web.Api.Requests.QueryCountRequest`1">
            <summary>
            Query Count Request.
            </summary>
            <typeparam name="TCriteria">The type of <see cref="T:DynamicExpression.Interfaces.IQueryCriteria"/>.</typeparam>
        </member>
        <member name="P:Nano.Web.Api.Requests.QueryCountRequest`1.Criteria">
            <summary>
            Criteria.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.QueryCountRequest`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.QueryCountRequest`1.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.QueryFirstRequest`1">
            <summary>
            Query First Request.
            </summary>
            <typeparam name="TCriteria">The type of <see cref="T:DynamicExpression.Interfaces.IQueryCriteria"/>.</typeparam>
        </member>
        <member name="P:Nano.Web.Api.Requests.QueryFirstRequest`1.Query">
            <summary>
            Query.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.QueryFirstRequest`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.QueryFirstRequest`1.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Api.Requests.QueryRequest`1">
            <summary>
            Query Request.
            </summary>
            <typeparam name="TCriteria">The type of <see cref="T:DynamicExpression.Interfaces.IQueryCriteria"/>.</typeparam>
        </member>
        <member name="P:Nano.Web.Api.Requests.QueryRequest`1.Query">
            <summary>
            Query.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.QueryRequest`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Nano.Web.Api.Requests.QueryRequest`1.GetBody">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Controllers.AuditController">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.AuditController.#ctor(Microsoft.Extensions.Logging.ILogger,Nano.Repository.Interfaces.IRepository,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Controllers.AuthController">
            <summary>
            Auth Controller.
            </summary>
        </member>
        <member name="P:Nano.Web.Controllers.AuthController.IdentityManager">
            <summary>
            Security Manager.
            </summary>
        </member>
        <member name="M:Nano.Web.Controllers.AuthController.#ctor(Nano.Security.IdentityManager)">
            <summary>
            Constructor.
            </summary>
            <param name="identityManager">The <see cref="P:Nano.Web.Controllers.AuthController.IdentityManager"/>.</param>
        </member>
        <member name="M:Nano.Web.Controllers.AuthController.LogIn(Nano.Security.Models.Login,System.Threading.CancellationToken)">
            <summary>
            Authenticates and signs in a user.
            On success a jwt-token is created and returned, for use with auhtorization.
            </summary>
            <param name="login">The login model.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The access token.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occurred.</response>
        </member>
        <member name="M:Nano.Web.Controllers.AuthController.LogOut(System.Threading.CancellationToken)">
            <summary>
            Logs out a user.
            The jwt-token and any external login is invalidated.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Nothing.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occurred.</response>
        </member>
        <member name="M:Nano.Web.Controllers.AuthController.LogInExternal(Nano.Security.Models.LoginExternal,System.Threading.CancellationToken)">
            <summary>
            Authenticates and signs in a user with external login.
            On success a jwt-token is created and returned, for later use with auhtorization.
            </summary>
            <param name="loginExternal">The login external request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The access token.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occurred.</response>
        </member>
        <member name="M:Nano.Web.Controllers.AuthController.GetExternalSchemes(System.Threading.CancellationToken)">
            <summary>
            Gets all the configured external login schemes.
            E.g. Google, Facebook, etc.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The collection of external login providers.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="500">Error occurred.</response>
        </member>
        <member name="T:Nano.Web.Controllers.BaseController">
            <summary>
            Base controller.
            </summary>
        </member>
        <member name="P:Nano.Web.Controllers.BaseController.UserId">
            <summary>
            User Id.
            </summary>
        </member>
        <member name="P:Nano.Web.Controllers.BaseController.UserName">
            <summary>
            User Name.
            </summary>
        </member>
        <member name="P:Nano.Web.Controllers.BaseController.UserEmail">
            <summary>
            User Email.
            </summary>
        </member>
        <member name="M:Nano.Web.Controllers.BaseController.Options">
            <summary>
            Options. Any route can be called with http options, to return options header information.
            </summary>
            <returns>Void.</returns>
            <response code="200">Success.</response>
            <response code="401">Unauthorized.</response>
        </member>
        <member name="T:Nano.Web.Controllers.BaseController`1">
            <summary>
            Base generic controller.
            </summary>
            <typeparam name="TRepository">The <see cref="T:Nano.Repository.Interfaces.IRepository"/>.</typeparam>
        </member>
        <member name="P:Nano.Web.Controllers.BaseController`1.Logger">
            <summary>
            Logger.
            </summary>
        </member>
        <member name="P:Nano.Web.Controllers.BaseController`1.Eventing">
            <summary>
            Eventing.
            </summary>
        </member>
        <member name="P:Nano.Web.Controllers.BaseController`1.Repository">
            <summary>
            Repository.
            </summary>
        </member>
        <member name="M:Nano.Web.Controllers.BaseController`1.#ctor(Microsoft.Extensions.Logging.ILogger,`0,Nano.Eventing.Interfaces.IEventing)">
            <summary>
            Constructor accepting an instance of <typeparamref name="TRepository"/> and initializing <see cref="P:Nano.Web.Controllers.BaseController`1.Repository"/>
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="repository">The <see cref="T:Nano.Repository.Interfaces.IRepository"/>.</param>
            <param name="eventing">The <see cref="T:Nano.Eventing.Interfaces.IEventingProvider"/>.</param>
        </member>
        <member name="T:Nano.Web.Controllers.BaseControllerCreatable`4">
            <summary>
            Base abstract <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/>, implementing  methods for instances of <typeparamref name="TEntity"/>.
            </summary>
            <typeparam name="TRepository">The <see cref="T:Nano.Repository.Interfaces.IRepository"/> inheriting from <see cref="T:Nano.Web.Controllers.BaseControllerReadOnly`4"/>.</typeparam>
            <typeparam name="TEntity">The <see cref="T:Nano.Models.Interfaces.IEntity"/> model the <see cref="T:Nano.Repository.Interfaces.IRepository"/> operates with.</typeparam>
            <typeparam name="TIdentity">The Identifier type of <typeparamref name="TEntity"/>.</typeparam>
            <typeparam name="TCriteria">The <see cref="T:DynamicExpression.Interfaces.IQueryCriteria"/> implementation.</typeparam>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerCreatable`4.#ctor(Microsoft.Extensions.Logging.ILogger,`0,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerCreatable`4.CreateConfirm(`1,System.Threading.CancellationToken)">
            <summary>
            Creates the passed model.
            </summary>
            <param name="entity">The model to create.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The created model.</returns>
            <response code="201">Created.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerCreatable`4.CreateConfirms(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
            Creates the passed models.
            </summary>
            <param name="entities">The models to create.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="T:Nano.Web.Controllers.BaseControllerDeletable`4">
            <summary>
            Base abstract <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/>, implementing  methods for instances of <typeparamref name="TEntity"/>.
            </summary>
            <typeparam name="TRepository">The <see cref="T:Nano.Repository.Interfaces.IRepository"/> inheriting from <see cref="T:Nano.Web.Controllers.BaseControllerReadOnly`4"/>.</typeparam>
            <typeparam name="TEntity">The <see cref="T:Nano.Models.Interfaces.IEntity"/> model the <see cref="T:Nano.Repository.Interfaces.IRepository"/> operates with.</typeparam>
            <typeparam name="TIdentity">The Identifier type of <typeparamref name="TEntity"/>.</typeparam>
            <typeparam name="TCriteria">The <see cref="T:DynamicExpression.Interfaces.IQueryCriteria"/> implementation.</typeparam>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerDeletable`4.#ctor(Microsoft.Extensions.Logging.ILogger,`0,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerDeletable`4.DeleteConfirm(`2,System.Threading.CancellationToken)">
            <summary>
            Delete the model with the passed identifier.
            </summary>
            <param name="id">The identifier of the model to delete.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="404">Not Found.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerDeletable`4.DeleteConfirms(`2[],System.Threading.CancellationToken)">
            <summary>
            Deletes the models with the passed identifier's.
            </summary>
            <param name="ids">The identifiers of the models to delete.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="404">Not Found.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerDeletable`4.DeleteConfirmsQuery(`3,System.Threading.CancellationToken)">
            <summary>
            Deletes the models matching the passed 'select' criteria.
            </summary>
            <param name="select">The crtieria for selecting models to delete.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="T:Nano.Web.Controllers.BaseControllerReadOnly`4">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.#ctor(Microsoft.Extensions.Logging.ILogger,`0,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.Index(DynamicExpression.Interfaces.IQuery,System.Threading.CancellationToken)">
            <summary>
            Gets all models.
            Filtered by the parameters in the passed query (pagination and ordering).
            </summary>
            <param name="query">The query.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>A collection of models, matching the passed query.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.IndexPost(DynamicExpression.Interfaces.IQuery,System.Threading.CancellationToken)">
            <summary>
            Gets all models.
            Filtered by the parameters in the passed query (pagination and ordering).
            </summary>
            <param name="query">The query.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>A collection of models, matching the passed query.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.Details(`2,System.Threading.CancellationToken)">
            <summary>
            Gets the model.
            Uniquely identified by the passed id.
            </summary>
            <param name="id">The identifier, that uniquely identifies the model.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The model.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.DetailsPost(`2[],System.Threading.CancellationToken)">
            <summary>
            Gets the models.
            Uniquely identified by the passed id's.
            </summary>
            <param name="ids">The identifiers, that uniquely identifies the models.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The model.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.Query(DynamicExpression.Interfaces.IQuery{`3},System.Threading.CancellationToken)">
            <summary>
            Gets all models.
            Filtered by the parameters in the passed query (criteria, pagination and ordering).
            </summary>
            <param name="query">The query model, containing filters used in the query.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>A collection of models, matching the passed query.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.QueryPost(DynamicExpression.Interfaces.IQuery{`3},System.Threading.CancellationToken)">
            <summary>
            Gets all models.
            Filtered by the parameters in the passed query (criteria, pagination and ordering).
            </summary>
            <param name="query">The query model, containing filters used in the query.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>A collection of models, matching the passed query.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.QueryFirst(DynamicExpression.Interfaces.IQuery{`3},System.Threading.CancellationToken)">
            <summary>
            Gets first entity mathcing the passed query (criteria, pagination and ordering).
            </summary>
            <param name="query">The query model, containing filters used in the query.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The model, matching the passed query.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.QueryFirstPost(DynamicExpression.Interfaces.IQuery{`3},System.Threading.CancellationToken)">
            <summary>
            Gets first entity mathcing the passed query (criteria, pagination and ordering).
            </summary>
            <param name="query">The query model, containing filters used in the query.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The model, matching the passed query.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.QueryCount(`3,System.Threading.CancellationToken)">
            <summary>
            Gets the number of models (Count).
            </summary>
            <param name="criteria">The criteria model, containing filters used in the criteria.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The count of models, matching the passed query.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerReadOnly`4.QueryCountPost(`3,System.Threading.CancellationToken)">
            <summary>
            Gets the number of models (Count).
            </summary>
            <param name="criteria">The criteria model, containing filters used in the query.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The count of models, matching the passed query.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="T:Nano.Web.Controllers.BaseControllerSpatial`4">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerSpatial`4.#ctor(Microsoft.Extensions.Logging.ILogger,`0,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerSpatial`4.Intersects(DynamicExpression.Entities.Query{`3},System.Threading.CancellationToken)">
            <summary>
            Gets <see cref="T:Nano.Models.Interfaces.IEntitySpatial"/>'s instances, that intersects the <paramref name="criteria.Geometry.Geometry"/>.
            </summary>
            <param name="criteria">The <see cref="T:DynamicExpression.Entities.Query`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The 'Index' <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerSpatial`4.Covers(DynamicExpression.Entities.Query{`3},System.Threading.CancellationToken)">
            <summary>
            Gets <see cref="T:Nano.Models.Interfaces.IEntitySpatial"/>'s instances, that covers the <paramref name="criteria.Geometry.Geometry"/>.
            </summary>
            <param name="criteria">The <see cref="T:DynamicExpression.Entities.Query`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The 'Index' <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerSpatial`4.CoveredBy(DynamicExpression.Entities.Query{`3},System.Threading.CancellationToken)">
            <summary>
            Gets <see cref="T:Nano.Models.Interfaces.IEntitySpatial"/>'s instances, that are covered By the <paramref name="criteria.Geometry.Geometry"/>.
            </summary>
            <param name="criteria">The <see cref="T:DynamicExpression.Entities.Query`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The 'Index' <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerSpatial`4.Overlaps(DynamicExpression.Entities.Query{`3},System.Threading.CancellationToken)">
            <summary>
            Gets <see cref="T:Nano.Models.Interfaces.IEntitySpatial"/>'s instances, that overlaps the <paramref name="criteria.Geometry.Geometry"/>.
            </summary>
            <param name="criteria">The <see cref="T:DynamicExpression.Entities.Query`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The 'Index' <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerSpatial`4.Touches(DynamicExpression.Entities.Query{`3},System.Threading.CancellationToken)">
            <summary>
            Gets <see cref="T:Nano.Models.Interfaces.IEntitySpatial"/>'s instances, that touches the <paramref name="criteria.Geometry.Geometry"/>.
            </summary>
            <param name="criteria">The <see cref="T:DynamicExpression.Entities.Query`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The 'Index' <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerSpatial`4.Crosses(DynamicExpression.Entities.Query{`3},System.Threading.CancellationToken)">
            <summary>
            Gets <see cref="T:Nano.Models.Interfaces.IEntitySpatial"/>'s instances, that crosses the <paramref name="criteria.Geometry.Geometry"/>.
            </summary>
            <param name="criteria">The <see cref="T:DynamicExpression.Entities.Query`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The 'Index' <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerSpatial`4.Disjoints(DynamicExpression.Entities.Query{`3},System.Threading.CancellationToken)">
            <summary>
            Gets <see cref="T:Nano.Models.Interfaces.IEntitySpatial"/>'s instances, that disjoints the <paramref name="criteria.Geometry.Geometry"/>.
            </summary>
            <param name="criteria">The <see cref="T:DynamicExpression.Entities.Query`1"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The 'Index' <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerSpatial`4.Within(DynamicExpression.Entities.Query{`3},System.Double,System.Threading.CancellationToken)">
            <summary>
            Within.
            Gets <see cref="T:Nano.Models.Interfaces.IEntitySpatial"/>'s instances, that are within the <paramref name="criteria.Radius.Radius"/> of <paramref name="criteria.Geometry.Geometry"/>.
            </summary>
            <param name="criteria">The <see cref="T:DynamicExpression.Entities.Query`1"/>.</param>
            <param name="distance">The distance in meters.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The 'Index' <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="T:Nano.Web.Controllers.BaseControllerUpdatable`4">
            <summary>
            Base abstract <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/>, implementing  methods for instances of <typeparamref name="TEntity"/>.
            </summary>
            <typeparam name="TRepository">The <see cref="T:Nano.Repository.Interfaces.IRepository"/> inheriting from <see cref="T:Nano.Web.Controllers.BaseControllerReadOnly`4"/>.</typeparam>
            <typeparam name="TEntity">The <see cref="T:Nano.Models.Interfaces.IEntity"/> model the <see cref="T:Nano.Repository.Interfaces.IRepository"/> operates with.</typeparam>
            <typeparam name="TIdentity">The Identifier type of <typeparamref name="TEntity"/>.</typeparam>
            <typeparam name="TCriteria">The <see cref="T:DynamicExpression.Interfaces.IQueryCriteria"/> implementation.</typeparam>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerUpdatable`4.#ctor(Microsoft.Extensions.Logging.ILogger,`0,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerUpdatable`4.EditConfirm(`1,System.Threading.CancellationToken)">
            <summary>
            Edit the passed model.
            </summary>
            <param name="entity">The model to edit.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The edited model.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerUpdatable`4.EditConfirms(`1[],System.Threading.CancellationToken)">
            <summary>
            Edits the passed models.
            </summary>
            <param name="entities">The models to edit.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerUpdatable`4.EditConfirmsQuery(System.ValueTuple{`3,`1},System.Threading.CancellationToken)">
            <summary>
            Edits the models, changing all entities returned by the passed 'select' criteria, with the values of the passed 'update'.
            </summary>
            <param name="criteria">The criteria for selecting models to edit, and the model containing values to be changed for all matching entities.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="T:Nano.Web.Controllers.BaseControllerWritable`4">
            <summary>
            Base abstract <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/>, implementing  methods for instances of <typeparamref name="TEntity"/>.
            </summary>
            <typeparam name="TRepository">The <see cref="T:Nano.Repository.Interfaces.IRepository"/> inheriting from <see cref="T:Nano.Web.Controllers.BaseControllerReadOnly`4"/>.</typeparam>
            <typeparam name="TEntity">The <see cref="T:Nano.Models.Interfaces.IEntity"/> model the <see cref="T:Nano.Repository.Interfaces.IRepository"/> operates with.</typeparam>
            <typeparam name="TIdentity">The Identifier type of <typeparamref name="TEntity"/>.</typeparam>
            <typeparam name="TCriteria">The <see cref="T:DynamicExpression.Interfaces.IQueryCriteria"/> implementation.</typeparam>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerWritable`4.#ctor(Microsoft.Extensions.Logging.ILogger,`0,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerWritable`4.CreateConfirm(`1,System.Threading.CancellationToken)">
            <summary>
            Creates the passed model.
            </summary>
            <param name="entity">The model to create.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The created model.</returns>
            <response code="201">Created.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerWritable`4.CreateConfirms(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
            Creates the passed models.
            </summary>
            <param name="entities">The models to create.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerWritable`4.EditConfirm(`1,System.Threading.CancellationToken)">
            <summary>
            Edit the passed model.
            </summary>
            <param name="entity">The model to edit.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The edited model.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerWritable`4.EditConfirms(`1[],System.Threading.CancellationToken)">
            <summary>
            Edits the passed models.
            </summary>
            <param name="entities">The models to edit.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerWritable`4.EditConfirmsQuery(System.ValueTuple{`3,`1},System.Threading.CancellationToken)">
            <summary>
            Edits the models, changing all entities returned by the passed 'select' criteria, with the values of the passed 'update'.
            </summary>
            <param name="criteria">The criteria for selecting models to edit, and the model containing values to be changed for all matching entities.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerWritable`4.DeleteConfirm(`2,System.Threading.CancellationToken)">
            <summary>
            Delete the model with the passed identifier.
            </summary>
            <param name="id">The identifier of the model to delete.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="404">Not Found.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerWritable`4.DeleteConfirms(`2[],System.Threading.CancellationToken)">
            <summary>
            Deletes the models with the passed identifier's.
            </summary>
            <param name="ids">The identifiers of the models to delete.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="404">Not Found.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.BaseControllerWritable`4.DeleteConfirmsQuery(`3,System.Threading.CancellationToken)">
            <summary>
            Deletes the models matching the passed 'select' criteria.
            </summary>
            <param name="select">The crtieria for selecting models to delete.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>Void.</returns>
            <response code="200">Ok.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="T:Nano.Web.Controllers.DefaultController`2">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.DefaultController`2.#ctor(Microsoft.Extensions.Logging.ILogger,Nano.Repository.Interfaces.IRepository,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Controllers.DefaultControllerCreatable`2">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.DefaultControllerCreatable`2.#ctor(Microsoft.Extensions.Logging.ILogger,Nano.Repository.Interfaces.IRepository,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Controllers.DefaultControllerDeletable`2">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.DefaultControllerDeletable`2.#ctor(Microsoft.Extensions.Logging.ILogger,Nano.Repository.Interfaces.IRepository,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Controllers.DefaultControllerReadOnly`2">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.DefaultControllerReadOnly`2.#ctor(Microsoft.Extensions.Logging.ILogger,Nano.Repository.Interfaces.IRepository,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Controllers.DefaultControllerSpatial`2">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.DefaultControllerSpatial`2.#ctor(Microsoft.Extensions.Logging.ILogger,Nano.Repository.Interfaces.IRepositorySpatial,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Controllers.DefaultControllerUpdatable`2">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.DefaultControllerUpdatable`2.#ctor(Microsoft.Extensions.Logging.ILogger,Nano.Repository.Interfaces.IRepository,Nano.Eventing.Interfaces.IEventing)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Controllers.HomeController">
            <summary>
            Home Controller.
            Contains method for handling application level operations.
            </summary>
        </member>
        <member name="M:Nano.Web.Controllers.HomeController.Index">
            <summary>
            Default action, returning an Ok (success) response.
            </summary>
            <returns>Void.</returns>
            <response code="200">Success.</response>
            <response code="401">Unauthorized.</response>
        </member>
        <member name="M:Nano.Web.Controllers.HomeController.SetLanguage(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the language in a cookie, for use with following requests.
            </summary>
            <param name="code">The langauge code.</param>
            <param name="returnUrl">The return url (if any).</param>
            <param name="cancellationToken">The cancellationToken.</param>
            <returns>Nothing (void).</returns>
        </member>
        <member name="T:Nano.Web.Controllers.IdentityController`2">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Controllers.IdentityController`2.IdentityManager">
            <summary>
            Security Manager.
            </summary>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.#ctor(Microsoft.Extensions.Logging.ILogger,Nano.Repository.Interfaces.IRepository,Nano.Eventing.Interfaces.IEventing,Nano.Security.IdentityManager)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.SignUpAsync(Nano.Security.Models.SignUp{`0},System.Threading.CancellationToken)">
            <summary>
            Signup.
            Registers a new user.
            </summary>
            <param name="signUp">The signuo request.</param>
            <param name="cancellationToken">The token used when request is cancelled.</param>
            <returns>The created user.</returns>
            <response code="201">Created.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.SignUpExternalAsync(Nano.Security.Models.SignUpExternal{`0},System.Threading.CancellationToken)">
            <summary>
            Registers a user with external login info.
            </summary>
            <param name="signUpExternal">The signup.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The user.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.SetUsernameAsync(Nano.Security.Models.SetUsername,System.Threading.CancellationToken)">
            <summary>
            Sets the username of a user.
            </summary>
            <param name="setUsername">The set username.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Void.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.SetPasswordAsync(Nano.Security.Models.SetPassword,System.Threading.CancellationToken)">
            <summary>
            Sets the password of a user.
            Only use to set a password for a user without one.
            Users authenticated with external login providers, doesn't initially have a password.
            </summary>
            <param name="setPassword">The set password.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Void.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.ResetPasswordAsync(Nano.Security.Models.ResetPassword,System.Threading.CancellationToken)">
            <summary>
            Resets the password of a user.
            </summary>
            <param name="resetPassword">The reset password.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Void.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.GetResetPasswordTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the password reset token, used to change the password of a user.
            </summary>
            <param name="emailAddress">The email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The reset password token.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.ChangePasswordAsync(Nano.Security.Models.ChangePassword,System.Threading.CancellationToken)">
            <summary>
            Changes the password of a user.
            </summary>
            <param name="changePassword">The change password.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Void.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.ChangeEmailAsync(Nano.Security.Models.ChangeEmail,System.Threading.CancellationToken)">
            <summary>
            Changes the email of a user.
            </summary>
            <param name="changeEmail">The change email.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Void.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.GetChangeEmailTokenAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the change email token, used to change the email address of a user.
            </summary>
            <param name="emailAddress">The email address.</param>
            <param name="newEmailAddress">The new email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The change email token.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.ConfirmEmailAsync(Nano.Security.Models.ConfirmEmail,System.Threading.CancellationToken)">
            <summary>
            Confirms the email address of a user.
            </summary>
            <param name="confirmEmail">The confirm email.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Void.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.GetConfirmEmailTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the confirm email token, used to confirm the email address of a user.
            </summary>
            <param name="emailAddress">The email address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The confirm email token.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="M:Nano.Web.Controllers.IdentityController`2.RemoveExternalLoginAsync(Nano.Security.Models.LoginExternal,System.Threading.CancellationToken)">
            <summary>
            Removes an external login for a user.
            </summary>
            <param name="externalLogin">The external login.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Void.</returns>
            <response code="200">Success.</response>
            <response code="400">Bad Request.</response>
            <response code="401">Unauthorized.</response>
            <response code="404">Not Found.</response>
            <response code="500">Error occured.</response>
        </member>
        <member name="T:Nano.Web.Hosting.Conventions.AduitControllerDisabledConvention">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Conventions.AduitControllerDisabledConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.Conventions.AuthControllerDisabledConvention">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Conventions.AuthControllerDisabledConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.Conventions.RoutePrefixConvention">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Conventions.RoutePrefixConvention.#ctor(Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider)">
            <summary>
            Constructor.
            </summary>
            <param name="templateProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider"/>.</param>
        </member>
        <member name="M:Nano.Web.Hosting.Conventions.RoutePrefixConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.Documentation.LowercaseDocumentFilter">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Documentation.LowercaseDocumentFilter.Apply(Swashbuckle.AspNetCore.Swagger.SwaggerDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.Enums.XXssProtectionPolicyBlockMode">
            <summary>
            X-Xss Protection Policy BlockMode.
            </summary>
        </member>
        <member name="F:Nano.Web.Hosting.Enums.XXssProtectionPolicyBlockMode.Disabled">
            <summary>
            Disabled.
            Specifies that the X-Xss-Protection header should not be set in the HTTP response.
            </summary>
        </member>
        <member name="F:Nano.Web.Hosting.Enums.XXssProtectionPolicyBlockMode.FilterDisabled">
            <summary>
            Filter Disabled.
            Specifies that the X-Xss-Protection header should be set in the HTTP response, explicitly disabling the IE XSS filter.
            </summary>
        </member>
        <member name="F:Nano.Web.Hosting.Enums.XXssProtectionPolicyBlockMode.FilterEnabled">
            <summary>
            Filter Enabled.
            Specifies that the X-Xss-Protection header should be set in the HTTP response, explicitly enabling the IE XSS filter.
            </summary>
        </member>
        <member name="F:Nano.Web.Hosting.Enums.XXssProtectionPolicyBlockMode.FilterEnabledBlockMode">
            <summary>
            Filter Enabled Block Mode.
            Specifies that the X-Xss-Protection header should be set in the HTTP response, explicitly enabling the IE XSS filter.
            BlockMode is set to true.
            </summary>
        </member>
        <member name="T:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions">
            <summary>
            Application Builder Extensions.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHealthChecks(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds health checks middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseExceptionHandling(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds exception handling middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpRequestOptions(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds options action middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpRequestIdentifier(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds request identifier middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpDocumentataion(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds documentation middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpLocalization(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds localization middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpContextAccessor(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds the <see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/> middleware, and initializes the current <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpSession(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds http session middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpResponseCaching(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds response caching middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpResponseCompression(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds response compresssion middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpXForwardedHeaders(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds no cache middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpXRobotsTagHeaders(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds x-Robots tag middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpReferrerPolicyHeader(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds referrer policy middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpXFrameOptionsPolicyHeader(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds X-frame options policy middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpXXssProtectionPolicyHeader(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds XXss protection policy middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpStrictTransportSecurityPolicyHeader(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds Hsts middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ApplicationBuilderExtensions.UseHttpsRedirect(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds rerdirect valiation middleware to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="T:Nano.Web.Hosting.Extensions.AuthenticationBuilderExtensions">
            <summary>
            Service Collection Extensions.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.AuthenticationBuilderExtensions.AddExternalLogins(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Nano.Security.SecurityOptions)">
            <summary>
            Adds external logins to the <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/>.</param>
            <param name="options">The <see cref="T:Nano.Security.SecurityOptions"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/>.</returns>
        </member>
        <member name="T:Nano.Web.Hosting.Extensions.HttpRequestExtensions">
            <summary>
            Http Request Extensions.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.HttpRequestExtensions.ReadBody(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Body"/> as a raw string.
            </summary>
            <param name="httpRequest">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>.</param>
            <returns>A <see cref="T:System.String"/> read from the <see cref="T:System.IO.Stream"/> of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Body"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.HttpRequestExtensions.IsContentTypeJson(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns whether the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> headers contains a content-type of 'application/json', 'application/javascript' or 
            the <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.QueryString"/> contains a 'format=json' parameter.
            </summary>
            <param name="httpRequest">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>.</param>
            <returns>A <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.HttpRequestExtensions.IsContentTypeXml(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns whether the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> headers contains a content-type of 'application/xml' or  
            the <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.QueryString"/> contains a 'format=xml' parameter.
            </summary>
            <param name="httpRequest">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>.</param>
            <returns>A <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.HttpRequestExtensions.IsContentTypeHtml(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns whether the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> headers contains a content-type of 'text/html' or
            the <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.QueryString"/> contains a 'format=html' parameter.
            </summary>
            <param name="httpRequest">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>.</param>
            <returns>A <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.HttpRequestExtensions.IsContentType(Microsoft.AspNetCore.Http.HttpRequest,System.String)">
            <summary>
            Returns whether the <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.ContentType"/> matches the passed <see cref="T:System.String"/>.
            </summary>
            <param name="httpRequest">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>.</param>
            <param name="match">The <see cref="T:System.String"/> content-type.</param>
            <returns>A <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="T:Nano.Web.Hosting.Extensions.ServiceCollectionExtensions">
            <summary>
            Service Collection Extensions.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Extensions.ServiceCollectionExtensions.AddWeb(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adds <see cref="T:Nano.Web.WebOptions"/> and services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</returns>
        </member>
        <member name="T:Nano.Web.Hosting.Filters.DisableLazyLoadingResultFilterAttribute">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResultFilterAttribute"/> that disables lazy loading before serialzing the response.
            </summary>
        </member>
        <member name="P:Nano.Web.Hosting.Filters.DisableLazyLoadingResultFilterAttribute.Repository">
            <summary>
            The <see cref="T:Nano.Repository.Interfaces.IRepository"/>.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Filters.DisableLazyLoadingResultFilterAttribute.#ctor(Nano.Repository.Interfaces.IRepository)">
            <summary>
            Constructor.
            Initialzing the <see cref="T:Nano.Repository.Interfaces.IRepository"/> with the passed <paramref name="repository"/>.
            </summary>
            <param name="repository">The <see cref="T:Nano.Repository.Interfaces.IRepository"/>.</param>
        </member>
        <member name="M:Nano.Web.Hosting.Filters.DisableLazyLoadingResultFilterAttribute.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.Filters.ModelStateValidationFilter">
            <summary>
            Model State Validation Filter.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Filters.ModelStateValidationFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Validates the model state upon execiting a controller action.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext"/>.</param>
        </member>
        <member name="T:Nano.Web.Hosting.HealthChecks.StartupHealthCheck">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.HealthChecks.StartupHealthCheck.#ctor(Nano.Web.Hosting.Startup.StartupTaskContext)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.HealthChecks.StartupHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.HttpContentType">
            <summary>
            Http Content Type.
            </summary>
        </member>
        <member name="F:Nano.Web.Hosting.HttpContentType.XML">
            <summary>
            Xml ("application/xml").
            </summary>
        </member>
        <member name="F:Nano.Web.Hosting.HttpContentType.JSON">
            <summary>
            Json ("application/json").
            </summary>
        </member>
        <member name="F:Nano.Web.Hosting.HttpContentType.HTML">
            <summary>
            Html ("text/html").
            </summary>
        </member>
        <member name="F:Nano.Web.Hosting.HttpContentType.TEXT">
            <summary>
            Text ("text/plain").
            </summary>
        </member>
        <member name="F:Nano.Web.Hosting.HttpContentType.FORM">
            <summary>
            Form ("application/x-www-form-urlencoded").
            </summary>
        </member>
        <member name="T:Nano.Web.Hosting.HttpContextAccess">
            <summary>
            Http Context Access (Static)
            </summary>
        </member>
        <member name="P:Nano.Web.Hosting.HttpContextAccess.Current">
            <summary>
            Current.
            The current <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>, fetched through the <see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/>.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.HttpContextAccess.Configure(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Configure.
            </summary>
            <param name="httpContextAccessor">The <inheritdoc cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/>.</param>
        </member>
        <member name="T:Nano.Web.Hosting.Middleware.ExceptionHandlingMiddleware">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Hosting.Middleware.ExceptionHandlingMiddleware.Logger">
            <summary>
            Logger.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Middleware.ExceptionHandlingMiddleware.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Constructor.
            </summary>
            <param name="logger">the <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Nano.Web.Hosting.Middleware.ExceptionHandlingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.Middleware.HttpRequestIdentifierMiddleware">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Middleware.HttpRequestIdentifierMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.Middleware.HttpRequestOptionsMiddleware">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Middleware.HttpRequestOptionsMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.ModelBinders.QueryModelBinder`1">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.ModelBinders.QueryModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.ModelBinders.QueryModelBinderProvider">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.ModelBinders.QueryModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.Serialization.EntityContractResolver">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Serialization.EntityContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
            Create a property.
            Empty collections is not serialzied.
            Properties of types implementing <see cref="T:Nano.Models.Interfaces.IEntityIdentity`1"/> is not serialized. 
            </summary>
            <param name="member">The <see cref="T:System.Reflection.MemberInfo"/>.</param>
            <param name="memberSerialization">The <see cref="T:Newtonsoft.Json.MemberSerialization"/>.</param>
            <returns>The <see cref="T:Newtonsoft.Json.Serialization.JsonProperty"/>.</returns>
        </member>
        <member name="T:Nano.Web.Hosting.Serialization.XmlConvert">
            <summary>
            Xml Convert.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Serialization.XmlConvert.SerializeObject``1(``0,System.String,System.Xml.Serialization.XmlSerializerNamespaces,System.Type[])">
            <summary>
            Serializes an instance of type <typeparamref name="T"/> to xml.
            </summary>
            <typeparam name="T">The type to serialize.</typeparam>
            <param name="object">The object instance to serialize.</param>
            <param name="defaultNamespace">The default namespace used in the xml.</param>
            <param name="namespaces">The namespaces.</param>
            <param name="knownTypes">The known types.</param>
            <returns>A <see cref="T:System.String"/> formatted as xml.</returns>
        </member>
        <member name="M:Nano.Web.Hosting.Serialization.XmlConvert.DeserializeObject``1(System.String,System.String,System.Type[])">
            <summary>
            Deserializes an xml strong to an instance of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type to deserialize the xml into.</typeparam>
            <param name="xml">The xml to deserialize.</param>
            <param name="defaultNamespace">The default namespace used in the xml.</param>
            <param name="knownTypes">The known types.</param>
            <returns>The instance of type <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Nano.Web.Hosting.Startup.BaseStartupTask">
            <inheritdoc />
        </member>
        <member name="P:Nano.Web.Hosting.Startup.BaseStartupTask.StartupTaskContext">
            <summary>
            Startup Task Context.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Startup.BaseStartupTask.#ctor(Nano.Web.Hosting.Startup.StartupTaskContext)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Startup.BaseStartupTask.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Startup.BaseStartupTask.StopAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.Startup.StartupTaskContext">
            <summary>
            Startup Task Context.
            </summary>
        </member>
        <member name="P:Nano.Web.Hosting.Startup.StartupTaskContext.IsDone">
            <summary>
            Is Complete.
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Startup.StartupTaskContext.Increment">
            <summary>
            Increment
            </summary>
        </member>
        <member name="M:Nano.Web.Hosting.Startup.StartupTaskContext.Decrement">
            <summary>
            Decrement.
            </summary>
        </member>
        <member name="T:Nano.Web.Hosting.Startup.Tasks.InitializeApplicationStartupTask">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Startup.Tasks.InitializeApplicationStartupTask.#ctor(Nano.Web.Hosting.Startup.StartupTaskContext)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Startup.Tasks.InitializeApplicationStartupTask.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.Hosting.Startup.Tasks.InitializeDatabaseStartupTask">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Startup.Tasks.InitializeDatabaseStartupTask.#ctor(Nano.Web.Hosting.Startup.StartupTaskContext,Nano.Data.BaseDbContext)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.Hosting.Startup.Tasks.InitializeDatabaseStartupTask.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Web.WebApplication">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.WebApplication.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Web.WebApplication.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.AspNetCore.Hosting.IApplicationLifetime)">
            <summary>
            Configures the application.
            </summary>
            <param name="applicationBuilder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <param name="hostingEnvironment">The <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/>.</param>
            <param name="applicationLifetime">The <see cref="T:Microsoft.AspNetCore.Hosting.IApplicationLifetime"/>.</param>
        </member>
        <member name="M:Nano.Web.WebApplication.ConfigureApp(System.String[])">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder"/>, ready to <see cref="M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build"/> and <see cref="M:Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(Microsoft.AspNetCore.Hosting.IWebHost)"/>.
            The application startup implementation is defaulted to <see cref="T:Nano.Web.WebApplication"/>.
            </summary>
            <param name="args">The command-line args, if any.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder"/>.</returns>
        </member>
        <member name="M:Nano.Web.WebApplication.ConfigureApp``1(System.String[])">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder"/>, ready to <see cref="M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build"/> and <see cref="M:Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(Microsoft.AspNetCore.Hosting.IWebHost)"/>.
            The application startup implementation is defined by the generic type parameter <typeparamref name="TApplication"/>.
            </summary>
            <typeparam name="TApplication">The type containing method for application start-up.</typeparam>
            <param name="args">The command-line args, if any.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder"/>.</returns>
        </member>
        <member name="T:Nano.Web.WebOptions">
            <summary>
            Web Options.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.SectionName">
            <summary>
            Section Name.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.Hosting">
            <summary>
            Hosting.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.Documentation">
            <summary>
            Documentation.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.CompatabilityVersion">
            <summary>
            Compatibility Version.
            </summary>
        </member>
        <member name="T:Nano.Web.WebOptions.HostingOptions">
            <summary>
            Hosting Options.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.Root">
            <summary>
            Root.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.Ports">
            <summary>
            Ports.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.PortsHttps">
            <summary>
            Ports Https.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.UseHttpsRewrite">
            <summary>
            Use Https Rewrite.
            Enables middleware for automatically rewrite http requests to https.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.UseHttpsRequired">
            <summary>
            Use Https Redirect.
            Forces https for all requests.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.UseForwardedHeaders">
            <summary>
            Use Forwarded Headers.
            Enables forwarded headers, when application is behind a proxy.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.UseResponseCompression">
            <summary>
            Use Response Compression.
            Enables middleware for dynamic compression of http responses.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.Hsts">
            <summary>
            Use Hsts.
            Settings for Strict-Transport-Security.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.Cache">
            <summary>
            Cache.
            Options for caching responses.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.Robots">
            <summary>
            Robots.
            Settings for robots (search engines) behavior.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.Session">
            <summary>
            Session.
            Settings for session behavior.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.Certificate">
            <summary>
            Certificate (ssl)
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.ReferrerPolicyHeader">
            <summary>
            Use Referrer Policy Header.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.FrameOptionsPolicyHeader">
            <summary>
            Use Frame Options Policy Header.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.XssProtectionPolicyHeader">
            <summary>
            Use Xss Protection Policy Header.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.UseHealthCheck">
            <summary>
            Use Health Check.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.UseHealthCheckUI">
            <summary>
            Use Health Check UI.
            </summary>
        </member>
        <member name="T:Nano.Web.WebOptions.HostingOptions.HstsOptions">
            <summary>
            Hsts Options
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.HstsOptions.IsEnabled">
            <summary>
            Is Enabled.
            Enables Hsts (Strict transport security) policies.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.HstsOptions.MaxAge">
            <summary>
            Max Age.
            The maximum age.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.HstsOptions.UsePreload">
            <summary>
            Use Preload.
            Adds the preload directive, defaults to false.
            Max-age must be at least 18 weeks, and includeSubdomains must be enabled to use the preload directive.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.HstsOptions.IncludeSubdomains">
            <summary>
            Include Subdomains.
            Adds includeSubDomains in the header, defaults to false
            </summary>
        </member>
        <member name="T:Nano.Web.WebOptions.HostingOptions.CacheOptions">
            <summary>
            Cache Options.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.CacheOptions.IsEnabled">
            <summary>
            Is Enabled.
            Enables Hsts (Strict transport security) policies.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.CacheOptions.MaxSize">
            <summary>
            Max Size.
            Default 1 MB.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.CacheOptions.MaxBodySize">
            <summary>
            Max Body Size.
            Default 100 MB.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.CacheOptions.MaxAge">
            <summary>
            Max Age.
            Default 20 minutes.
            </summary>
        </member>
        <member name="T:Nano.Web.WebOptions.HostingOptions.RobotOptions">
            <summary>
            Robot Options.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.RobotOptions.IsEnabled">
            <summary>
            Is Enabled.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.RobotOptions.UseNoIndex">
            <summary>
            Use No Index.
            Instructs search engines to not index the page
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.RobotOptions.UseNoFollow">
            <summary>
            Use No Follow
            Instructs search engines to not follow links on the page
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.RobotOptions.UseNoSnippet">
            <summary>
            Use No Snippet.
            Instructs search engines to not display a snippet for the page in search results
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.RobotOptions.UseNoArchive">
            <summary>
            Use No Archive.
            Instructs search engines to not offer a cached version of the page in search results
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.RobotOptions.UseNoOdp">
            <summary>
            Use No ODP.
            Instructs search engines to not use information from the Open Directory Project for the page’s title or snippet
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.RobotOptions.UseNoTranslate">
            <summary>
            Use No Translate - Instructs search engines to not offer translation of the page in search results (Google only)
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.RobotOptions.UseNoImageIndex">
            <summary>
            Use No Image Index.
            Instructs search engines to not index images on the page (Google only)
            </summary>
        </member>
        <member name="T:Nano.Web.WebOptions.HostingOptions.SessionOptions">
            <summary>
            Session Options.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.SessionOptions.IsEnabled">
            <summary>
            Is Enabled.
            Enables session.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.SessionOptions.Timeout">
            <summary>
            Timeout.
            The session timeout.
            </summary>
        </member>
        <member name="T:Nano.Web.WebOptions.HostingOptions.CertificateOptions">
            <summary>
            Certificate Options.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.CertificateOptions.Path">
            <summary>
            Path.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.HostingOptions.CertificateOptions.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="T:Nano.Web.WebOptions.DocumentationOptions">
            <summary>
            Documentation Options.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.DocumentationOptions.Contact">
            <summary>
            Contact.
            </summary>
        </member>
        <member name="P:Nano.Web.WebOptions.DocumentationOptions.License">
            <summary>
            License.
            </summary>
        </member>
    </members>
</doc>
