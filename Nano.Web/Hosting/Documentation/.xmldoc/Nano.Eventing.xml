<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nano.Eventing</name>
    </assembly>
    <members>
        <member name="T:Nano.Eventing.Attributes.PublishAttribute">
            <summary>
            Publish Attribute.
            Types with this annotation, defines that an event will be published for the entity when it changes. 
            </summary>
        </member>
        <member name="T:Nano.Eventing.Attributes.SubscribeAttribute">
            <summary>
            Subscribe Attribute.
            Types with this annotation, subscribes to events of the declaring type. 
            </summary>
        </member>
        <member name="T:Nano.Eventing.EntityEvent">
            <summary>
            Entity Event.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EntityEvent.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EntityEvent.Type">
            <summary>
            Type.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EntityEvent.State">
            <summary>
            State.
            </summary>
        </member>
        <member name="M:Nano.Eventing.EntityEvent.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="id"></param>
            <param name="type"></param>
            <param name="state"></param>
        </member>
        <member name="T:Nano.Eventing.EventingOptions">
            <summary>
            Eventing Options.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.SectionName">
            <summary>
            Section Name.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.Host">
            <summary>
            Host.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.VHost">
            <summary>
            VHost.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.Username">
            <summary>
            Username.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.Port">
            <summary>
            Port.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.Timeout">
            <summary>
            Timeout, in seconds.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.UseSsl">
            <summary>
            Use Ssl.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.Heartbeat">
            <summary>
            Heartbeat, in seconds.
            Zero means no hearbeat requests.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.UseHealthCheck">
            <summary>
            Use Health Check.
            </summary>
        </member>
        <member name="P:Nano.Eventing.EventingOptions.ConnectionString">
            <summary>
            ConnectionString.
            </summary>
        </member>
        <member name="T:Nano.Eventing.Extensions.ServiceCollectionExtensions">
            <summary>
            Service Collection Extensions.
            </summary>
        </member>
        <member name="M:Nano.Eventing.Extensions.ServiceCollectionExtensions.AddEventing``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds eventing provider of type <typeparamref name="TProvider"/> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <typeparam name="TProvider">The <typeparamref name="TProvider"/> type.</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</returns>
        </member>
        <member name="M:Nano.Eventing.Extensions.ServiceCollectionExtensions.AddEventing(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adds <see cref="T:Nano.Eventing.EventingOptions"/> to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</returns>
        </member>
        <member name="T:Nano.Eventing.Handlers.EntityEventHandler">
            <summary>
            Entity Event Handler.
            </summary>
        </member>
        <member name="P:Nano.Eventing.Handlers.EntityEventHandler.Logger">
            <summary>
            Logger.
            </summary>
        </member>
        <member name="P:Nano.Eventing.Handlers.EntityEventHandler.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="M:Nano.Eventing.Handlers.EntityEventHandler.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Constructor.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext"/>.</param>
        </member>
        <member name="M:Nano.Eventing.Handlers.EntityEventHandler.CallbackAsync(Nano.Eventing.EntityEvent,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Nano.Eventing.Interfaces.IEventing">
            <summary>
            Eventing interface.
            </summary>
        </member>
        <member name="M:Nano.Eventing.Interfaces.IEventing.PublishAsync``1(``0,System.String)">
            <summary>
            Publishes a message to an exchange using 'fanout' publish/subscribe topology.
            </summary>
            <typeparam name="TMessage">The type of the message body.</typeparam>
            <param name="body">The message body.</param>
            <param name="routing">The routing key (if any).</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> (void).</returns>
        </member>
        <member name="M:Nano.Eventing.Interfaces.IEventing.SubscribeAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Consumes messages.
            </summary>
            <typeparam name="TMessage">The type of response body.</typeparam>
            <param name="routing">The routing key (if any).</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> (void).</returns>
        </member>
        <member name="T:Nano.Eventing.Interfaces.IEventingHandler`1">
            <summary>
            Event Handler interface.
            </summary>
        </member>
        <member name="M:Nano.Eventing.Interfaces.IEventingHandler`1.CallbackAsync(`0,System.Boolean)">
            <summary>
            CallbackAsync.
            Invoked when recieving a publshed message.
            </summary>
            <param name="event">The instance of type <typeparamref name="TEvent"/>.</param>
            <param name="isRetrying">Is Retrying. Indicates whether the message is being redelivered.</param>
            <returns>Void.</returns>
        </member>
        <member name="T:Nano.Eventing.Interfaces.IEventingProvider">
            <summary>
            Eventing Provider interface.
            Defines the provider used for eventing in the application.
            </summary>
        </member>
        <member name="M:Nano.Eventing.Interfaces.IEventingProvider.Configure">
            <summary>
            Configures the <see cref="T:Nano.Eventing.Interfaces.IEventing"/>.
            </summary>
            <returns>The <see cref="T:Nano.Eventing.Interfaces.IEventing"/>.</returns>
        </member>
        <member name="T:Nano.Eventing.NullEventing">
            <summary>
            Null Eventing.
            </summary>
        </member>
        <member name="M:Nano.Eventing.NullEventing.PublishAsync``1(``0,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Eventing.NullEventing.SubscribeAsync``1(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Eventing.NullEventing.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Nano.Eventing.Providers.EasyNetQ.EasyNetQEventing">
            <inheritdoc />
        </member>
        <member name="P:Nano.Eventing.Providers.EasyNetQ.EasyNetQEventing.Bus">
            <summary>
            Bus.
            </summary>
        </member>
        <member name="M:Nano.Eventing.Providers.EasyNetQ.EasyNetQEventing.#ctor(EasyNetQ.IBus)">
            <summary>
            Constructor.
            </summary>
            <param name="bus">The <see cref="T:EasyNetQ.IBus"/>.</param>
        </member>
        <member name="M:Nano.Eventing.Providers.EasyNetQ.EasyNetQEventing.PublishAsync``1(``0,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Eventing.Providers.EasyNetQ.EasyNetQEventing.SubscribeAsync``1(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nano.Eventing.Providers.EasyNetQ.EasyNetQEventing.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Nano.Eventing.Providers.EasyNetQ.EasyNetQEventing.Dispose(System.Boolean)">
            <summary>
            Dispose.
            Only disposes if passed <paramref name="disposing"/> is true.
            </summary>
            <param name="disposing">The <see cref="T:System.Boolean"/> indicating if disposing.</param>
        </member>
        <member name="T:Nano.Eventing.Providers.EasyNetQ.EasyNetQProvider">
            <summary>
            EasyNetQ Provider.
            </summary>
        </member>
        <member name="P:Nano.Eventing.Providers.EasyNetQ.EasyNetQProvider.Options">
            <summary>
            Options.
            </summary>
        </member>
        <member name="P:Nano.Eventing.Providers.EasyNetQ.EasyNetQProvider.Services">
            <summary>
            Services.
            </summary>
        </member>
        <member name="M:Nano.Eventing.Providers.EasyNetQ.EasyNetQProvider.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,Nano.Eventing.EventingOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <param name="options">The <see cref="T:Nano.Eventing.EventingOptions"/>.</param>
        </member>
        <member name="M:Nano.Eventing.Providers.EasyNetQ.EasyNetQProvider.Configure">
            <inheritdoc />
        </member>
    </members>
</doc>
